;_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/#
;
;	Module		:LIST_CHARA.ERB
;	Facility	:リスト（キャラ）。
;
;	Licence		:ライセンスフリー。
;
;	Modification Data:
;
;	Edit	Date			Author					Reason
;	001		20XX/XX/XX		----					新規作成
;	002		2017/03/02		morph					eraTWからリスト表示関数を輸入してeraAS用に書きなおした（LIST_CHARA_STATUS_GROUP/LIST_CHARA_STATUS）
;	003		2018/11/11		morph					ソートした内容を登録番号に反映できるように（LIST_CHARA_MEMORY_SORT）
;	004     2019/04/15      M                       表示系改善＆リファクタリングMOD: TP/AP表示をPRINT_STATUSへ集約＆ 0 になったら伏字モード
;
;_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/#

;===============================================================================
;  ◇記載関数一覧(記載順)
;
;		Module Name						Explanation
;
; *- XXXX
;
;	・ LIST_CHARA						LIST:キャラリスト
;	・ LIST_CHARA_STATUS_MAIN			LIST:ステータス表示付きキャラリスト関数
;	・ LIST_CHARA_STATUS_GROUP			LIST:ラベル使用部分キャラリスト関数
;	・ LIST_CHARA_MEMORY_SORT			LIST:LIST変数の内容を登録番号に反映する関数
;
;===============================================================================

;-------------------------------------------------------------------------------
;   XXXX
;-------------------------------------------------------------------------------

;=================================================
;   sub LIST_CHARA
;=================================================
;   LIST:キャラリスト
;-------------------------------------------------
; Input:
;  ARGS:0				説明文
;  ARG:0				ページ位置
;  ARGS:1				再帰した際のエラーメッセージ
; Output:
;  RESULT:0				キャラ(1000の場合は"戻る")
;  RESULT:1				ページ位置
;-------------------------------------------------
@LIST_CHARA(ARGS:0, ARG:0, ARGS:1, ARG:1)
#DIM L_INPUT
#DIM L_I
#DIM L_PAGE
#DIM L_CNT_DATA
#DIM L_CNT_PRINT
#DIM L_PREV
#DIM L_NEXT
#DIMS L_ERR_MSG

;-----------------------------
;- 初期処理
;-----------------------------

L_INPUT=0
L_I=0
L_PAGE=ARG:0
L_CNT_DATA=0
L_CNT_PRINT=0

; キャラ総数
L_CNT_DATA = CHARANUM
; キャラ表示数/P
L_CNT_PRINT = FLAG:定数_キャラ表示数

L_ERR_MSG = %ARGS:1%

SIF !INRANGE(L_PAGE, 0, L_CNT_DATA / L_CNT_PRINT)
	L_PAGE = 0

;-----------------------------
;- 処理開始
;-----------------------------

$PRINT_LIST
	;ライン表示:新ページ
	CALL C_LINE
	PRINTFORML %ARGS:0%　＜page.{L_PAGE}＞ (計{L_CNT_DATA}人)
	DRAWLINE
	L_I = 0
	WHILE 1
		;SET:開始値
		SIF L_I < (L_PAGE * L_CNT_PRINT)
			L_I = (L_PAGE * L_CNT_PRINT)
		;ページ範囲外
		SIF L_I >= ( (L_PAGE + 1) * L_CNT_PRINT)
			BREAK
		;- 最大キャラ数超過
		IF L_I >= L_CNT_DATA
			;空行
			PRINTL
		ELSEIF TALENT:L_I:不在 == 0 && TALENT:L_I:ボランティア == 0
			PRINTFORM [%TOSTR(L_I),3%] 
			;- 表示:ターゲット(詳細)
			SELECTCASE ARGS:0
			CASE "次世代創造", "施設配属", "特別保護", "レギュラー", "階級付与", "業務"
				CALL EX_INFO_TARGET_DETAIL(L_I, , ARG:1, ARGS:0)
			CASEELSE
				CALL INFO_TARGET_DETAIL(L_I,,ARG:1)
			ENDSELECT
			PRINTL 
		ENDIF
		L_I += 1
	WEND

	PRINTL
	L_PREV = (L_PAGE <= 0) ? 0 # 1
	L_NEXT = ( L_PAGE >= (L_CNT_DATA / L_CNT_PRINT) ) ? 0 # 1

	PRINTFORMLC \@(!L_PREV) ? %" " * 16% # [1007]前のページ\@
	PRINTFORMLC [1000]戻る
	PRINTFORMLC \@(!L_NEXT) ? %" " * 16% # [1009]次のページ\@
	PRINTL 
	PRINTL 

	SIF STRLENS(L_ERR_MSG)
		REUSELASTLINE （%L_ERR_MSG%）

	$INPUT_LOOP_1
	INPUT
	L_INPUT = RESULT
	L_ERR_MSG=

	;- 表示:ページ別
	SELECTCASE L_INPUT
		;- 終了
		CASE 1000
			RETURN 1000
		;- キャラ
		CASE 0 TO L_CNT_DATA -1
			RESULT:1 = L_PAGE
			RETURNFORM L_INPUT
		;前のページ
		CASE 1007
			SIF !L_PREV
				GOTO ERROR
			L_PAGE -= 1
		;次のページ
		CASE 1009
			SIF !L_NEXT
				GOTO ERROR
			L_PAGE += 1
		;- その他
		CASEELSE
			$ERROR
			;INPUTエラー対応
			CALL C_INPUT_ERROR
			GOTO INPUT_LOOP_1
	ENDSELECT

	GOTO PRINT_LIST




;-------------------------------------------------
;ステータス表示付きキャラリスト関数
;-------------------------------------------------
;eraTWから移植したキャラリスト表示関数
;表示する情報と表示範囲を操作して@LIST_CHARA_STATUS_GROUPでキャラリストを表示する
@LIST_CHARA_STATUS_MAIN(FIRST_PAGE = 0, NOW_GROUP, OP, SCENE = "DEFAULT", MEMO)
#DIM  FIRST_PAGE           ;
#DIM  PACK_PAGE            ;表示内容の切替用
#DIMS OP                   ;機能オプション
#DIMS SCENE                ;使用する場面、喫茶店など
#DIMS MEMO                 ;自由に設定する一行表示
#DIMS LIST_PACK,    30     ;ここでいうリストとは複数の表示ステータス項目（ラベル）をひとまとめにしたもの≒1ページの表示内容
                           ;LIST_PACKはさらにそれをひとまとまりのセットとして扱い、SCENEごとに切り替えられるようにする
#DIM  PACK_SIZE            ;リストの種数≒ページ数
#DIM  DYNAMIC GET_LIST = 1 ;キャラリスト更新フラグ、必ず最初に一回
#DIM  CHARA_LIST , 1000    ;キャラリスト本体、登録番号にて記録、上限がわからんがとりあえず1000人
#DIM  CHARA_CNT            ;キャラリストに取得したキャラの数
#DIM  REF NOW_GROUP        ;表示中のキャラグループ
#DIM  LAST_GROUP           ;キャラグループ総数
#DIM  SHOW_START           ;表示開始のキャララベルID
#DIM  SHOW_END             ;表示終了のキャララベルID
#DIM  INPUT_MIN            ;表示中キャララベルIDの最小値、配列の上下限を加味した入力制限
#DIM  INPUT_MAX            ;表示中キャララベルIDの最大値
#DIMS SORT_TYPE            ;キャラリストのソートタイプ
#DIM  L_INPUT              ;入力内容の一時保持
#DIMS PREV_SCENE           ;前に呼びだされた時の場面
SIF !FLAG:定数_カフェ表示数
	FLAG:定数_カフェ表示数 = 10

;LIST_PACKの取得
IF PREV_SCENE == SCENE
ELSE
	CALLF DIM_TABLE_LIST_PACK(SCENE, LIST_PACK, PACK_SIZE)
	PREV_SCENE '= SCENE
ENDIF

SIF !INRANGE(PACK_PAGE, 0, PACK_SIZE - 1)
	PACK_PAGE = 0

IF GET_LIST
	IF !STRCOUNT(OP, "「リスト更新無し」")
		;キャラリストの作成
		CALLF MEMBER_LIST_ALL(SCENE, CHARA_LIST, CHARA_CNT)
		GET_LIST = 0
		VARSET SORT_TYPE
	ENDIF
	IF !STRCOUNT(OP, "「ページ更新無し」")
		PACK_PAGE = FIRST_PAGE
	ENDIF
ENDIF

;現在のタイプの総グループ数を更新
LAST_GROUP = 1 + (CHARA_CNT - 1) / FLAG:定数_カフェ表示数
NOW_GROUP  = MIN(NOW_GROUP, LAST_GROUP)

SHOW_START = (NOW_GROUP - 1) * FLAG:定数_カフェ表示数
SHOW_END   = NOW_GROUP * FLAG:定数_カフェ表示数
INPUT_MIN  = MAX(0, SHOW_START)
INPUT_MAX  = MIN(CHARA_CNT - 1, SHOW_END)


;一行表示
IF STRLENS(MEMO)
	DRAWLINE
	PRINTFORML %MEMO%
ENDIF
;ヘッダー情報表示
CALL LIST_CHARA_STATUS_HEADER(SCENE, LIST_PACK:PACK_PAGE, CHARA_CNT, NOW_GROUP, LAST_GROUP)
;リストの表示処理
CALL LIST_CHARA_STATUS_GROUP(SCENE, CHARA_LIST, SHOW_START, SHOW_END, INPUT_MIN, INPUT_MAX, SORT_TYPE, LIST_PACK:PACK_PAGE)
DRAWLINE
;入力処理、共通ボタン処理もここ
CALL LIST_CHARA_INPUT(SCENE, OP, CHARA_LIST, CHARA_CNT, NOW_GROUP, LAST_GROUP, LIST_PACK, PACK_PAGE, PACK_SIZE, INPUT_MIN, INPUT_MAX, SORT_TYPE, GET_LIST)
L_INPUT = RESULT
SIF L_INPUT < 0
	RESTART
RETURN L_INPUT


;-------------------------------------------------
;キャラリストヘッダー関数
;-------------------------------------------------
@LIST_CHARA_STATUS_HEADER(SCENE, LIST_NAME, CHARA_CNT, NOW_GROUP, LAST_GROUP)
#DIMS SCENE      ;現在の場面
#DIMS LIST_NAME  ;表示項目の分類＝PACK_NAME
#DIM  CHARA_CNT  ;キャラリスト配列のキャラ数
#DIM  NOW_GROUP  ;閲覧中のキャラグループ
#DIM  LAST_GROUP ;キャラグループの最大値
DRAWLINE
TRYCCALLFORM %SCENE_TYPE(SCENE)%_LIST_CHARA_STATUS_HEADER(SCENE, LIST_NAME, CHARA_CNT, NOW_GROUP, LAST_GROUP)
CATCH
ENDCATCH
PRINTFORML 表示情報：%LIST_NAME, 18, LEFT%　（{CHARA_CNT}名　{NOW_GROUP}/{LAST_GROUP}）
DRAWLINE
IF LIST_NAME == "基礎情報"
	PRINTL
	DRAWLINE
ENDIF



;-------------------------------------------------
;ラベル使用部分キャラリスト関数
;-------------------------------------------------
;CHARA_LIST配列の一部を抜き出して表示する
;CHARA_LIST配列とLABEL_LIST配列を渡して使用する
;LABEL_LIST配列に文字列を指定することで任意のステータスを一行表示することが出来る
@LIST_CHARA_STATUS_GROUP(SCENE, CHARA_LIST, SHOW_START, SHOW_END, INPUT_MIN, INPUT_MAX, SORT_TYPE, LIST_NAME)
#DIMS     SCENE         ;使用するシーン
#DIM  REF CHARA_LIST    ;キャラリスト配列
#DIM      SHOW_START    ;表示開始のキャララベルID
#DIM      SHOW_END      ;表示終了のキャララベルID
#DIM      INPUT_MIN     ;表示中キャララベルIDの最小値
#DIM      INPUT_MAX     ;表示中キャララベルIDの最大値
#DIMS     LABEL_LIST, 30;表示内容の取得用
#DIM      LABEL_SIZE    ;表示内容の数
#DIMS     SORT_TYPE     ;現在のソート順
#DIMS     LIST_NAME     ;現在の表示内容
#DIMS     PREV_LIST     ;前回表示した内容
#DIM      C_LABEL       ;キャララベルID
#DIM      DETAIL_OP     ;基礎情報の表示内容の切り替え用
TRYCCALLFORM %SCENE_TYPE(SCENE)%_LIST_CHARA_STATUS_GROUP(SCENE, CHARA_LIST, SHOW_START, SHOW_END, INPUT_MIN, INPUT_MAX, SORT_TYPE, LIST_NAME)
CATCH
	CALL DEFAULT_LIST_CHARA_STATUS_GROUP(SCENE, CHARA_LIST, SHOW_START, SHOW_END, INPUT_MIN, INPUT_MAX, SORT_TYPE, LIST_NAME)
ENDCATCH



;-------------------------------------------------
;シーン切替可能入力関数
;-------------------------------------------------
;LIST_CHARA_STATUS_MAINの入力処理用
;自分でも思う、引数多すぎ
;SCENEごとに入力の結果と共通ボタン処理を切り替えられるようにした
;RETURNが負数ならば呼び出し元でRESTARTが実行され、キャラリスト処理が続行します
;0以上の数値なら呼び出し元からさらにRETURN RESULTで大本の関数に数値を渡せます
@LIST_CHARA_INPUT(SCENE, OP, CHARA_LIST, CHARA_CNT, NOW_GROUP, LAST_GROUP, LIST_PACK, PACK_PAGE, PACK_SIZE, INPUT_MIN, INPUT_MAX, SORT_TYPE, GET_LIST)
#DIMS     SCENE      ;使用場面
#DIMS     OP         ;オプション文字列
#DIM  REF CHARA_LIST ;キャラリスト一覧配列
#DIM      CHARA_CNT  ;リスト中のキャラ数
#DIM  REF NOW_GROUP  ;現在表示中のキャラグループ
#DIM      LAST_GROUP ;キャラグループの最後尾
#DIMS REF LIST_PACK  ;パックリスト配列
#DIM  REF PACK_PAGE  ;表示データのページ数
#DIM      PACK_SIZE  ;パックリスト配列のサイズ
#DIM      INPUT_MIN  ;表示中キャララベルIDの最小値
#DIM      INPUT_MAX  ;表示中キャララベルIDの最大値
#DIMS REF SORT_TYPE  ;現在のソート順
#DIM  REF GET_LIST   ;キャラリスト更新処理用フラグ
#DIMS     INPUT_STR  ;入力内容の一時保持
#DIM      INPUT_INT  ;入力内容の一時保持
#DIM      L_INPUT    ;入力内容の一時保持

#DIM DYNAMIC L_SUP_CNT, 4         ;各部隊に配属済みのキャラ数

VARSET INPUT_STR
VARSET INPUT_INT
RESULT = 0
TRYCCALLFORM %SCENE_TYPE(SCENE)%_LIST_CHARA_INPUT(SCENE, OP, CHARA_LIST, CHARA_CNT, NOW_GROUP, LAST_GROUP, LIST_PACK, PACK_PAGE, PACK_SIZE, INPUT_MIN, INPUT_MAX, SORT_TYPE, GET_LIST)
CATCH
	CALL DEFAULT_LIST_CHARA_INPUT(SCENE, OP, CHARA_LIST, CHARA_CNT, NOW_GROUP, LAST_GROUP, LIST_PACK, PACK_PAGE, PACK_SIZE, INPUT_MIN, INPUT_MAX, SORT_TYPE, GET_LIST)
ENDCATCH
RETURN RESULT




@LIST_CHARA_MEMORY_SORT(CHARA_LIST, CHARA_CNT)
#DIM REF CHARA_LIST
#DIM     CHARA_CNT
#DIM     LIST_ID
#DIM     PREV_TARGET
#DIM     UNIQUE_ID
PREV_TARGET = FINDCHARA(CFLAG:調教対象フラグ, 1, 1)
SIF PREV_TARGET >= 1
	UNIQUE_ID = CFLAG:PREV_TARGET:個別番号
CVARSET CFLAG, GETNUM(CFLAG, "ソート番号"), 1000
CFLAG:MASTER:ソート番号 = -1
FOR LIST_ID, 0, CHARA_CNT
	CFLAG:(CHARA_LIST:LIST_ID):ソート番号 = LIST_ID
NEXT
SORTCHARA CFLAG:ソート番号
CALLF CHANGE_TARGET_ARRAY()
IF PREV_TARGET >= 1
	CALL CHANGE_TARGET_SET(FINDCHARA(CFLAG:個別番号, UNIQUE_ID, 1))
ELSE
	CALL CHANGE_TARGET_CLEAR
ENDIF
CVARSET CFLAG, GETNUM(CFLAG, "ソート番号")
PRINTFORMW 現在のリスト配置を登録番号に反映しました
[SKIPSTART]












[SKIPEND]




