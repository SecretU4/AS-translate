;_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/#
;
;	Module		:LIST_CHARA.ERB
;	Facility	:リスト（キャラ）。
;
;	Licence		:ライセンスフリー。
;
;	Modification Data:
;
;	Edit	Date			Author					Reason
;	001		20XX/XX/XX		----					新規作成
;	002		2017/03/02		morph					eraTWからリスト表示関数を輸入してeraAS用に書きなおした（LIST_CHARA_STATUS_GROUP/LIST_CHARA_STATUS）
;	003		2018/11/11		morph					ソートした内容を登録番号に反映できるように（LIST_CHARA_MEMORY_SORT）
;
;_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/#

;===============================================================================
;  ◇記載関数一覧(記載順)
;
;		Module Name						Explanation
;
; *- XXXX
;
;	・ LIST_CHARA						LIST:キャラリスト
;	・ LIST_CHARA_STATUS_MAIN			LIST:ステータス表示付きキャラリスト関数
;	・ LIST_CHARA_STATUS_GROUP			LIST:ラベル使用部分キャラリスト関数
;	・ LIST_CHARA_MEMORY_SORT			LIST:LIST変数の内容を登録番号に反映する関数
;
;===============================================================================

;-------------------------------------------------------------------------------
;   XXXX
;-------------------------------------------------------------------------------

;=================================================
;   sub LIST_CHARA
;=================================================
;   LIST:キャラリスト
;-------------------------------------------------
; Input:
;  ARGS:0				説明文
;  ARG:0				ページ位置
;  ARGS:1				再帰した際のエラーメッセージ
; Output:
;  RESULT:0				キャラ(1000の場合は"戻る")
;  RESULT:1				ページ位置
;-------------------------------------------------
@LIST_CHARA(ARGS:0, ARG:0, ARGS:1, ARG:1)
#DIM L_INPUT
#DIM L_I
#DIM L_PAGE
#DIM L_CNT_DATA
#DIM L_CNT_PRINT
#DIM L_PREV
#DIM L_NEXT
#DIMS L_ERR_MSG

;-----------------------------
;- 初期処理
;-----------------------------

L_INPUT=0
L_I=0
L_PAGE=ARG:0
L_CNT_DATA=0
L_CNT_PRINT=0

; キャラ総数
L_CNT_DATA = CHARANUM

; キャラ表示数/P
L_CNT_PRINT = FLAG:定数_キャラ表示数

L_ERR_MSG = %ARGS:1%

SIF !INRANGE(L_PAGE, 0, L_CNT_DATA / L_CNT_PRINT)
	L_PAGE = 0

;-----------------------------
;- 処理開始
;-----------------------------

$PRINT_LIST
	

	;ライン表示:新ページ
	CALL C_LINE
	PRINTFORML %ARGS:0%　＜page.{L_PAGE}＞ (計{L_CNT_DATA}人)
	DRAWLINE

	L_I = 0
	WHILE 1

		;SET:開始値
		SIF L_I < (L_PAGE * L_CNT_PRINT)
			L_I = (L_PAGE * L_CNT_PRINT)

		;ページ範囲外
		SIF L_I >= ( (L_PAGE + 1) * L_CNT_PRINT)
			BREAK

		;- 最大キャラ数超過
		IF L_I >= L_CNT_DATA
			;空行
			PRINTL

		ELSE
			PRINTFORM [%TOSTR(L_I),3%] 

			;- 表示:ターゲット(詳細)
			IF ARGS:0 == "次世代創造" || ARGS:0 == "施設配属"
				CALL EX_INFO_TARGET_DETAIL(L_I,,ARG:1,ARGS:0)
			ELSEIF ARGS:0 == "特別保護" || ARGS:0 == "レギュラー"
				CALL EX_INFO_TARGET_DETAIL(L_I,,ARG:1,ARGS:0)
			ELSEIF ARGS:0 == "階級付与" 
				CALL EX_INFO_TARGET_DETAIL(L_I,,ARG:1,ARGS:0)
			ELSEIF ARGS:0 == "業務" 
				CALL EX_INFO_TARGET_DETAIL(L_I,,ARG:1,ARGS:0)
			ELSE
				CALL INFO_TARGET_DETAIL(L_I,,ARG:1)
			ENDIF
			PRINTL 
		ENDIF

		L_I += 1

	WEND
	PRINTL

	L_PREV = (L_PAGE <= 0) ? 0 # 1
	L_NEXT = ( L_PAGE >= (L_CNT_DATA / L_CNT_PRINT) ) ? 0 # 1

	PRINTFORMLC \@(!L_PREV) ? %" " * 16% # [1007]前のページ\@
	PRINTFORMLC [1000]戻る
	PRINTFORMLC \@(!L_NEXT) ? %" " * 16% # [1009]次のページ\@
	PRINTL 
	PRINTL 

	SIF STRLENS(L_ERR_MSG)
		REUSELASTLINE （%L_ERR_MSG%）

	$INPUT_LOOP_1
	INPUT
	L_INPUT = RESULT
	L_ERR_MSG=

	;- 表示:ページ別
	SELECTCASE L_INPUT
		;- 終了
		CASE 1000
			RETURN 1000
		;- キャラ
		CASE 0 TO L_CNT_DATA -1
			RESULT:1 = L_PAGE
			RETURNFORM L_INPUT
		;前のページ
		CASE 1007
			SIF !L_PREV
				GOTO ERROR
			L_PAGE -= 1
		;次のページ
		CASE 1009
			SIF !L_NEXT
				GOTO ERROR
			L_PAGE += 1
		;- その他
		CASEELSE
			$ERROR
			;INPUTエラー対応
			CALL C_INPUT_ERROR
			GOTO INPUT_LOOP_1
	ENDSELECT

	GOTO PRINT_LIST




;-------------------------------------------------
;ステータス表示付きキャラリスト関数
;-------------------------------------------------
;eraTWから移植したキャラリスト表示関数
;表示する情報と表示範囲を操作して@LIST_CHARA_STATUS_GROUPでキャラリストを表示する
@LIST_CHARA_STATUS_MAIN(FIRST_PAGE = 0, OP, SCENE = "DEFAULT", MEMO)
#DIM  FIRST_PAGE           ;
#DIM  PACK_PAGE            ;表示内容の切替用
#DIMS OP                   ;機能オプション
#DIMS SCENE                ;使用する場面、喫茶店など
#DIMS MEMO                 ;自由に設定する一行表示
#DIMS LIST_PACK,    30     ;ここでいうリストとは複数の表示ステータス項目（ラベル）をひとまとめにしたもの≒1ページの表示内容
                           ;LIST_PACKはさらにそれをひとまとまりのセットとして扱い、SCENEごとに切り替えられるようにする
#DIM  PACK_SIZE            ;リストの種数≒ページ数
#DIM  DYNAMIC GET_LIST = 1 ;キャラリスト更新フラグ、必ず最初に一回
#DIM  CHARA_LIST , 1000    ;キャラリスト本体、登録番号にて記録、上限がわからんがとりあえず1000人
#DIM  CHARA_CNT            ;キャラリストに取得したキャラの数
#DIM  NOW_GROUP = 1        ;表示中のキャラグループ
#DIM  LAST_GROUP           ;キャラグループ総数
#DIM  SHOW_START           ;表示開始のキャララベルID
#DIM  SHOW_END             ;表示終了のキャララベルID
#DIM  INPUT_MIN            ;表示中キャララベルIDの最小値、配列の上下限を加味した入力制限
#DIM  INPUT_MAX            ;表示中キャララベルIDの最大値
#DIMS SORT_TYPE            ;キャラリストのソートタイプ
#DIM  L_INPUT              ;入力内容の一時保持
#DIMS PREV_SCENE           ;前に呼びだされた時の場面
SIF !FLAG:定数_カフェ表示数
	FLAG:定数_カフェ表示数 = 10

;LIST_PACKの取得
IF PREV_SCENE == SCENE
ELSE
	CALLF DIM_TABLE_LIST_PACK(SCENE, LIST_PACK, PACK_SIZE)
	PREV_SCENE '= SCENE
ENDIF

SIF !INRANGE(PACK_PAGE, 0, PACK_SIZE - 1)
	PACK_PAGE = 0

IF GET_LIST
	IF !STRCOUNT(OP, "「リスト更新無し」")
		;キャラリストの作成
		CALLF MEMBER_LIST_ALL(SCENE, CHARA_LIST, CHARA_CNT)
		GET_LIST = 0
		VARSET SORT_TYPE
	ENDIF
	IF !STRCOUNT(OP, "「ページ更新無し」")
		PACK_PAGE = FIRST_PAGE
	ENDIF
ENDIF

;現在のタイプの総グループ数を更新
LAST_GROUP = 1 + (CHARA_CNT - 1) / FLAG:定数_カフェ表示数
SHOW_START = (NOW_GROUP - 1) * FLAG:定数_カフェ表示数
SHOW_END   = NOW_GROUP * FLAG:定数_カフェ表示数
INPUT_MIN  = MAX(0, SHOW_START)
INPUT_MAX  = MIN(CHARA_CNT - 1, SHOW_END)
;一行表示
IF STRLENS(MEMO)
	DRAWLINE
	PRINTFORML %MEMO%
ENDIF
;ヘッダー情報表示
CALL LIST_CHARA_STATUS_HEADER(SCENE, LIST_PACK:PACK_PAGE, CHARA_CNT, NOW_GROUP, LAST_GROUP)
;リストの表示処理
CALL LIST_CHARA_STATUS_GROUP(SCENE, CHARA_LIST, SHOW_START, SHOW_END, INPUT_MIN, INPUT_MAX, SORT_TYPE, LIST_PACK:PACK_PAGE)
DRAWLINE
;入力処理、共通ボタン処理もここ
CALL LIST_CHARA_INPUT(SCENE, OP, CHARA_LIST, CHARA_CNT, NOW_GROUP, LAST_GROUP, LIST_PACK, PACK_PAGE, PACK_SIZE, INPUT_MIN, INPUT_MAX, SORT_TYPE, GET_LIST)
L_INPUT = RESULT
SIF L_INPUT < 0
	RESTART
RETURN L_INPUT


;-------------------------------------------------
;キャラリストヘッダー関数
;-------------------------------------------------
@LIST_CHARA_STATUS_HEADER(SCENE, LIST_NAME, CHARA_CNT, NOW_GROUP, LAST_GROUP)
#DIMS SCENE      ;現在の場面
#DIMS LIST_NAME  ;表示項目の分類＝PACK_NAME
#DIM  CHARA_CNT  ;キャラリスト配列のキャラ数
#DIM  NOW_GROUP  ;閲覧中のキャラグループ
#DIM  LAST_GROUP ;キャラグループの最大値
DRAWLINE
SELECTCASE SCENE
CASE "CAFE"
	IF Flag:時間帯 == 0
		PRINTFORM 【時間帯:昼(善属性住民発生中)】
	ELSE
		PRINTFORM 【時間帯:夜(悪属性住民発生中)】
	ENDIF
	PRINTFORML 【TP:{Flag:都市_現在TP}/{Flag:都市_最大TP}】【AP:{Flag:都市_現在AP}/{Flag:都市_最大AP}】
ENDSELECT
PRINTFORML 表示情報：%LIST_NAME, 18, LEFT%　（{CHARA_CNT}名　{NOW_GROUP}/{LAST_GROUP}）
DRAWLINE



;-------------------------------------------------
;ラベル使用部分キャラリスト関数
;-------------------------------------------------
;CHARA_LIST配列の一部を抜き出して表示する
;CHARA_LIST配列とLABEL_LIST配列を渡して使用する
;LABEL_LIST配列に文字列を指定することで任意のステータスを一行表示することが出来る
@LIST_CHARA_STATUS_GROUP(SCENE, CHARA_LIST, SHOW_START, SHOW_END, INPUT_MIN, INPUT_MAX, SORT_TYPE, LIST_NAME)
#DIMS     SCENE         ;使用するシーン
#DIM  REF CHARA_LIST    ;キャラリスト配列
#DIM      SHOW_START    ;表示開始のキャララベルID
#DIM      SHOW_END      ;表示終了のキャララベルID
#DIM      INPUT_MIN     ;表示中キャララベルIDの最小値
#DIM      INPUT_MAX     ;表示中キャララベルIDの最大値
#DIMS     LABEL_LIST, 30;表示内容の取得用
#DIM      LABEL_SIZE    ;表示内容の数
#DIMS     SORT_TYPE     ;現在のソート順
#DIMS     LIST_NAME     ;現在の表示内容
#DIMS     PREV_LIST     ;前回表示した内容
#DIM      C_LABEL       ;キャララベルID
#DIM      RPG_OP        ;RPGの場面転換用
;先に例外処理
IF LIST_NAME == "基礎情報"
	SELECTCASE SCENE
	{
	CASE "EXPLORER", "RPG", 
		"RPG_武器強化", 
		"RPG_技能成長", 
		"RPG_強化剤投与", 
		"RPG_超人薬投与", 
		"RPG_随伴配置", 
		"RPG_後方配置", 
		"RPG_回収配置", 
		"RPG_探索配置"
	}
		SELECTCASE SCENE
		CASE "RPG_強化剤投与"
			RPG_OP = 1
		CASE "RPG_超人薬投与"
			RPG_OP = 2
		CASE "RPG_技能成長"
			RPG_OP = 3
		CASEELSE
			RPG_OP = 0
		ENDSELECT
		FOR C_LABEL, SHOW_START, SHOW_END
			IF INRANGE(C_LABEL, INPUT_MIN, INPUT_MAX)
				PRINTFORM [{C_LABEL, 3}] 
				CALL RPG_INFO_TARGET_DETAIL(CHARA_LIST:C_LABEL, RPG_OP)
			ENDIF
			PRINTL
		NEXT
	CASEELSE
		FOR C_LABEL, SHOW_START, SHOW_END
			IF INRANGE(C_LABEL, INPUT_MIN, INPUT_MAX)
				PRINTFORM [{C_LABEL, 3}] 
				CALL INFO_TARGET_DETAIL(CHARA_LIST:C_LABEL)
			ENDIF
			PRINTL
		NEXT
	ENDSELECT
	RETURN
ENDIF
;ラベルリスト取得
IF LIST_NAME == PREV_LIST
ELSE
	CALLF DIM_TABLE_LABEL_LIST(LIST_NAME, LABEL_LIST, LABEL_SIZE)
	PREV_LIST '= LIST_NAME
ENDIF
;デバッグ確認用
;CALL VAR_SHOW_STR_ARRAY(LABEL_LIST, LABEL_SIZE)
CALL INFO_CHARA_DETAIL_LABEL(-1, 0, SORT_TYPE, LABEL_LIST, LABEL_SIZE)
DRAWLINE
FOR C_LABEL, SHOW_START, SHOW_END
	IF INRANGE(C_LABEL, INPUT_MIN, INPUT_MAX)
		CALL INFO_CHARA_DETAIL_LABEL(C_LABEL, CHARA_LIST:C_LABEL, SORT_TYPE, LABEL_LIST, LABEL_SIZE)
	ELSE
		PRINTL
	ENDIF
NEXT



;-------------------------------------------------
;シーン切替可能入力関数
;-------------------------------------------------
;LIST_CHARA_STATUS_MAINの入力処理用
;自分でも思う、引数多すぎ
;SCENEごとに入力の結果と共通ボタン処理を切り替えられるようにした
;RETURNが負数ならば呼び出し元でRESTARTが実行され、キャラリスト処理が続行します
;0以上の数値なら呼び出し元からさらにRETURN RESULTで大本の関数に数値を渡せます
@LIST_CHARA_INPUT(SCENE, OP, CHARA_LIST, CHARA_CNT, NOW_GROUP, LAST_GROUP, LIST_PACK, PACK_PAGE, PACK_SIZE, INPUT_MIN, INPUT_MAX, SORT_TYPE, GET_LIST)
#DIMS     SCENE      ;使用場面
#DIMS     OP         ;オプション文字列
#DIM  REF CHARA_LIST ;キャラリスト一覧配列
#DIM      CHARA_CNT  ;リスト中のキャラ数
#DIM  REF NOW_GROUP  ;現在表示中のキャラグループ
#DIM      LAST_GROUP ;キャラグループの最後尾
#DIMS REF LIST_PACK  ;パックリスト配列
#DIM  REF PACK_PAGE  ;表示データのページ数
#DIM      PACK_SIZE  ;パックリスト配列のサイズ
#DIM      INPUT_MIN  ;表示中キャララベルIDの最小値
#DIM      INPUT_MAX  ;表示中キャララベルIDの最大値
#DIMS REF SORT_TYPE  ;現在のソート順
#DIM  REF GET_LIST   ;キャラリスト更新処理用フラグ
#DIMS     INPUT_STR  ;入力内容の一時保持
#DIM      INPUT_INT  ;入力内容の一時保持
#DIM      L_INPUT    ;入力内容の一時保持
VARSET INPUT_STR
VARSET INPUT_INT
SELECTCASE SCENE
CASE "DEFAULT"
	$DO_DEFAULT
	;ボタン長さ：
	;[----] - 
	;%LIST_PACK:((PACK_PAGE - 1 + PACK_SIZE) % PACK_SIZE), 20%
	;
	;情報移動はボタン部9、ラベル部20で29
	;キャラ移動はボタン部9、ラベル部14で23
	PRINTFORM %" " * 29%
	PRINTFORM 　　
	SIF CHARA_CNT > 0 && NOW_GROUP > 1
		PRINTBUTTON "[8888] - 　前のキャラ　", "8888"
	PRINTFORML 
	PRINTFORM 　
	PRINTBUTTON @"[4444] - %LIST_PACK:((PACK_PAGE - 1 + PACK_SIZE) % PACK_SIZE), 20%", "4444"
	PRINTFORM 　
	PRINTFORM %" " * 23%
	PRINTFORM 　
	PRINTBUTTON @"[6666] - %LIST_PACK:((PACK_PAGE + 1 + PACK_SIZE) % PACK_SIZE), 20%", "6666"
	PRINTFORML 
	PRINTFORM 　
	PRINTBUTTON "[1111] - 　　　　ソートの反映", "1111"
	PRINTFORM 　
	IF CHARA_CNT > 0 && NOW_GROUP < LAST_GROUP
		PRINTBUTTON "[2222] - 　次のキャラ　", "2222"
	ELSE
		PRINTFORM %" " * 23%
	ENDIF
	PRINTFORM 　
	PRINTBUTTON "[3333] - 　　　　表示人数変更", "3333"
	PRINTFORML 
	DRAWLINE
	PRINTFORM 　
	PRINTBUTTON "[9999] - 　　　　もどる　　　　", "9999"
	PRINTFORML 
	PRINTFORML 
	DO
		INPUTS
		INPUT_STR '= RESULTS
		SIF !STRLENS(INPUT_STR)
			GOTO DEFAULT_RETRY
		IF ISNUMERIC(INPUT_STR)
			INPUT_INT = TOINT(INPUT_STR)
			SELECTCASE INPUT_INT
			;先にシステム系を処理、キャラ数が多いので4ケタに拡張
			CASE 1111
				CALL LIST_CHARA_MEMORY_SORT(CHARA_LIST, CHARA_CNT)
				RETURN 0
			CASE 8888
				SIF !(CHARA_CNT > 0 && NOW_GROUP > 1)
					GOTO DEFAULT_RETRY
				NOW_GROUP --
				RETURN -1
			CASE 2222
				SIF !(CHARA_CNT > 0 && NOW_GROUP < LAST_GROUP)
					GOTO DEFAULT_RETRY
				NOW_GROUP ++
				RETURN -1
			CASE 3333
				PRINTFORML ページ最大表示人数を選択または入力してください（1〜999人）
				PRINTFORM [5] 5人 
				PRINTFORM [10] 10人 
				PRINTFORM [15] 15人 
				PRINTFORML [20] 20人 
				PRINTFORML [0] 変更しない
				INPUT
				L_INPUT = RESULT
				IF INRANGE(L_INPUT, 1, 999)
					FLAG:定数_カフェ表示数 = L_INPUT
					PRINTFORMW 表示人数を{L_INPUT}人に変更しました
					NOW_GROUP = 1
				ENDIF
				RETURN -1
			CASE 4444
				PACK_PAGE = (PACK_PAGE - 1 + PACK_SIZE) % PACK_SIZE
				RETURN -1
			CASE 6666
				PACK_PAGE = (PACK_PAGE + 1 + PACK_SIZE) % PACK_SIZE
				RETURN -1
			CASE 9999
				NOW_GROUP = 1
				RETURN
			CASEELSE
			;キャラが選択された時
				SIF !INRANGE(INPUT_INT, INPUT_MIN, INPUT_MAX)
					GOTO DEFAULT_RETRY
				;ここだけDO-LOOPぬけます
				BREAK
				$DEFAULT_RETRY
				CALL C_INPUT_ERROR("無効な入力です")
				CONTINUE
			ENDSELECT
		ELSE
			;STRで受け取った時、SORT処理なので処理が可能な場合は全てRESTART
			;妙な文字列を受け取った場合にはCONTINUE
			;DO-LOOPを脱出できるのはINTかつ、リスト上のキャラを選択した場合のみ
			CALL CHARA_SORT_CTRL(CHARA_LIST, CHARA_CNT, INPUT_STR, SORT_TYPE)
			IF RESULT
				RETURN -1
			ELSE
				GOTO DEFAULT_RETRY
			ENDIF
		ENDIF
	LOOP 1
	IF STRCOUNT(OP, "「情報表示」")
		CALL INFO_STATUS_GROUP(CHARA_LIST, INPUT_INT, CHARA_CNT, OP)
		SIF RESULT < 0
			RETURN -1
		NOW_GROUP = 1
		SIF STRCOUNT(OP, "「最終確認」")
			RETURN RESULT
	ELSE
		NOW_GROUP = 1
		RETURN CHARA_LIST:INPUT_INT
	ENDIF
CASE "CAFE"
	;ボタン長さ：
	;[----] - 
	;%LIST_PACK:((PACK_PAGE - 1 + 11) % 11), 20%
	;
	;情報移動はボタン部9、ラベル部20で29
	;キャラ移動はボタン部9、ラベル部14で23
	PRINTFORM %" " * 29%
	PRINTFORM 　　
	SIF CHARA_CNT > 0 && NOW_GROUP > 1
		PRINTBUTTON "[8888] - 　前のキャラ　", "8888"
	PRINTFORML 
	PRINTFORM 　
	PRINTBUTTON @"[4444] - %LIST_PACK:((PACK_PAGE - 1 + PACK_SIZE) % PACK_SIZE), 20%", "4444"
	PRINTFORM 　
	PRINTFORM %" " * 23%
	PRINTFORM 　
	PRINTBUTTON @"[6666] - %LIST_PACK:((PACK_PAGE + 1 + PACK_SIZE) % PACK_SIZE), 20%", "6666"
	PRINTFORML 
	IF CHARANUM < 200
		PRINTFORM 　
		PRINTBUTTON "[1111] - 　　新住人を見定める", "1111"
		PRINTFORM 　
	ELSE
		PRINTFORM %" " * 29%
		PRINTFORM 　　
	ENDIF
	IF CHARA_CNT > 0 && NOW_GROUP < LAST_GROUP
		PRINTBUTTON "[2222] - 　次のキャラ　", "2222"
	ELSE
		PRINTFORM %" " * 23%
	ENDIF
	PRINTFORM 　
	PRINTBUTTON "[3333] - 　　　　表示人数変更", "3333"
	PRINTFORML 
	DRAWLINE
	PRINTFORM 　
	PRINTBUTTON "[9999] - 　　　　もどる　　　　", "9999"
	PRINTFORML 
	PRINTFORML 
	DO
		INPUTS
		INPUT_STR '= RESULTS
		SIF !STRLENS(INPUT_STR)
			GOTO CAFE_RETRY
		IF ISNUMERIC(INPUT_STR)
			INPUT_INT = TOINT(INPUT_STR)
			SELECTCASE INPUT_INT
			;先にシステム系を処理、キャラ数が多いので4ケタに拡張
			CASE 8888
				SIF !(CHARA_CNT > 0 && NOW_GROUP > 1)
					GOTO CAFE_RETRY
				NOW_GROUP --
				RETURN -1
			CASE 2222
				SIF !(CHARA_CNT > 0 && NOW_GROUP < LAST_GROUP)
					GOTO CAFE_RETRY
				NOW_GROUP ++
				RETURN -1
			CASE 1111
				SIF CHARANUM >= 200
					GOTO CAFE_RETRY
				CALL CITY_SCOUT
				SIF RESULT
					GET_LIST = 1
				RETURN -1
			CASE 3333
				PRINTFORML ページ最大表示人数を選択または入力してください（1〜999人）
				PRINTFORM [5] 5人 
				PRINTFORM [10] 10人 
				PRINTFORM [15] 15人 
				PRINTFORML [20] 20人 
				PRINTFORML [0] 変更しない
				INPUT
				L_INPUT = RESULT
				IF INRANGE(L_INPUT, 1, 999)
					FLAG:定数_カフェ表示数 = L_INPUT
					PRINTFORMW 表示人数を{L_INPUT}人に変更しました
					NOW_GROUP = 1
				ENDIF
				RETURN -1
			CASE 4444
				PACK_PAGE = (PACK_PAGE - 1 + PACK_SIZE) % PACK_SIZE
				RETURN -1
			CASE 6666
				PACK_PAGE = (PACK_PAGE + 1 + PACK_SIZE) % PACK_SIZE
				RETURN -1
			CASE 9999
				NOW_GROUP = 1
				RETURN
			CASEELSE
			;キャラが選択された時
				SIF !INRANGE(INPUT_INT, INPUT_MIN, INPUT_MAX)
					GOTO CAFE_RETRY
				;ここだけDO-LOOPぬけます
				BREAK
				$CAFE_RETRY
				CALL C_INPUT_ERROR("無効な入力です")
				CONTINUE
			ENDSELECT
		ELSE
			;STRで受け取った時、SORT処理なので処理が可能な場合は全てRESTART
			;妙な文字列を受け取った場合にはCONTINUE
			;DO-LOOPを脱出できるのはINTかつ、リスト上のキャラを選択した場合のみ
			CALL CHARA_SORT_CTRL(CHARA_LIST, CHARA_CNT, INPUT_STR, SORT_TYPE)
			IF RESULT
				RETURN -1
			ELSE
				GOTO CAFE_RETRY
			ENDIF
		ENDIF
	LOOP 1
	CALL CAFE_TALK_GROUP(CHARA_LIST, INPUT_INT, CHARA_CNT, OP)
	RETURN -1
{
CASE "EXPLORER", "RPG", 
	"RPG_武器強化", 
	"RPG_技能成長", 
	"RPG_強化剤投与", 
	"RPG_超人薬投与", 
	"RPG_随伴配置", 
	"RPG_後方配置", 
	"RPG_回収配置", 
	"RPG_探索配置"
}

	;ボタン長さ：
	;[----] - 
	;%LIST_PACK:((PACK_PAGE - 1 + PACK_SIZE) % PACK_SIZE), 20%
	;
	;情報移動はボタン部9、ラベル部20で29
	;キャラ移動はボタン部9、ラベル部14で23
	PRINTFORM %" " * 29%
	PRINTFORM 　　
	SIF CHARA_CNT > 0 && NOW_GROUP > 1
		PRINTBUTTON "[8888] - 　前のキャラ　", "8888"
	PRINTFORML 
	PRINTFORM 　
	PRINTBUTTON @"[4444] - %LIST_PACK:((PACK_PAGE - 1 + PACK_SIZE) % PACK_SIZE), 20%", "4444"
	PRINTFORM 　
	PRINTFORM %" " * 23%
	PRINTFORM 　
	PRINTBUTTON @"[6666] - %LIST_PACK:((PACK_PAGE + 1 + PACK_SIZE) % PACK_SIZE), 20%", "6666"
	PRINTFORML 
	PRINTFORM 　
	IF GROUPMATCH(SCENE, "RPG_武器強化", "RPG_技能成長", "RPG_強化剤投与", "RPG_超人薬投与", "RPG_随伴配置", "RPG_後方配置", "RPG_回収配置", "RPG_探索配置")
		PRINTBUTTON "[1111] - 　　　　全キャラ解任", "1111"
	ELSE
		PRINTFORM %" " * 29%
	ENDIF
	PRINTFORM 　
	IF CHARA_CNT > 0 && NOW_GROUP < LAST_GROUP
		PRINTBUTTON "[2222] - 　次のキャラ　", "2222"
	ELSE
		PRINTFORM %" " * 23%
	ENDIF
	PRINTFORM 　
	PRINTBUTTON "[3333] - 　　　　表示人数変更", "3333"
	PRINTFORML 
	IF GROUPMATCH(SCENE, "RPG_武器強化", "RPG_技能成長", "RPG_強化剤投与", "RPG_超人薬投与", "RPG_随伴配置", "RPG_後方配置", "RPG_回収配置", "RPG_探索配置")
		DRAWLINE
		PRINTFORM 　
		SIF SCENE == "RPG_武器強化"
			SETCOLOR COLOR("黄色")
		PRINTBUTTON "[1000] - 　　　　　　武器強化", "1000"
		PRINTFORM 　
		RESETCOLOR
		SIF SCENE == "RPG_技能成長"
			SETCOLOR COLOR("黄色")
		PRINTBUTTON "[1001] - 　　技能成長　", "1001"
		PRINTFORM 　
		RESETCOLOR
		SIF SCENE == "RPG_強化剤投与"
			SETCOLOR COLOR("黄色")
		PRINTBUTTON "[1002] - 　　　　　強化剤投与", "1002"
		PRINTFORM 　
		RESETCOLOR
		SIF SCENE == "RPG_超人薬投与"
			SETCOLOR COLOR("黄色")
		PRINTBUTTON "[1003] - 　　超人薬投与", "1003"
		PRINTFORML 
		RESETCOLOR
		
		SIF SCENE == "RPG_随伴配置"
			SETCOLOR COLOR("黄色")
		PRINTFORM 　
		PRINTBUTTON "[1004] - 　　　　　　随伴配置", "1004"
		PRINTFORM 　
		RESETCOLOR
		SIF SCENE == "RPG_後方配置"
			SETCOLOR COLOR("黄色")
		PRINTBUTTON "[1005] - 　　後方配置　", "1005"
		PRINTFORM 　
		RESETCOLOR
		SIF SCENE == "RPG_回収配置"
			SETCOLOR COLOR("黄色")
		PRINTBUTTON "[1006] - 　　　　　　回収配置", "1006"
		PRINTFORM 　
		RESETCOLOR
		SIF SCENE == "RPG_探索配置"
			SETCOLOR COLOR("黄色")
		PRINTBUTTON "[1007] - 　　　探索配置", "1007"
		PRINTFORML 
		RESETCOLOR
	ELSE
	ENDIF
	DRAWLINE
	PRINTFORM 　
	PRINTBUTTON "[9999] - 　　　　もどる　　　　", "9999"
	PRINTFORML 
	PRINTFORML 
	DO
		INPUTS
		INPUT_STR '= RESULTS
		SIF !STRLENS(INPUT_STR)
			GOTO RPG_RETRY
		IF ISNUMERIC(INPUT_STR)
			INPUT_INT = TOINT(INPUT_STR)
			SELECTCASE INPUT_INT
			;先にシステム系を処理、キャラ数が多いので4ケタに拡張
			CASE 1111
				IF GROUPMATCH(SCENE, "RPG_武器強化", "RPG_技能成長", "RPG_強化剤投与", "RPG_超人薬投与", "RPG_随伴配置", "RPG_後方配置", "RPG_回収配置", "RPG_探索配置")
					PRINTFORML 本当に全てのキャラを部隊から外しますか？
					PRINTFORML 
					PRINTFORML [1] 外す
					PRINTFORML [0] やめる
					INPUT
					IF RESULT == 1
						CALL SUPPORT_CHARA_ALL_REMOVE
					ELSE
						PRINTFORMW 解任をキャンセルします
					ENDIF
					RETURN -1
				ELSE
					GOTO RPG_RETRY
				ENDIF
			CASE 1000 TO 1007
				SIF !GROUPMATCH(SCENE, "RPG_武器強化", "RPG_技能成長", "RPG_強化剤投与", "RPG_超人薬投与", "RPG_随伴配置", "RPG_後方配置", "RPG_回収配置", "RPG_探索配置")
					GOTO RPG_RETRY
				RETURN INPUT_INT
			CASE 8888
				SIF !(CHARA_CNT > 0 && NOW_GROUP > 1)
					GOTO RPG_RETRY
				NOW_GROUP --
				RETURN -1
			CASE 2222
				SIF !(CHARA_CNT > 0 && NOW_GROUP < LAST_GROUP)
					GOTO RPG_RETRY
				NOW_GROUP ++
				RETURN -1
			CASE 3333
				PRINTFORML ページ最大表示人数を選択または入力してください（1〜999人）
				PRINTFORM [5] 5人 
				PRINTFORM [10] 10人 
				PRINTFORM [15] 15人 
				PRINTFORML [20] 20人 
				PRINTFORML [0] 変更しない
				INPUT
				L_INPUT = RESULT
				IF INRANGE(L_INPUT, 1, 999)
					FLAG:定数_カフェ表示数 = L_INPUT
					PRINTFORMW 表示人数を{L_INPUT}人に変更しました
					NOW_GROUP = 1
				ENDIF
				RETURN -1
			CASE 4444
				PACK_PAGE = (PACK_PAGE - 1 + PACK_SIZE) % PACK_SIZE
				RETURN -1
			CASE 6666
				PACK_PAGE = (PACK_PAGE + 1 + PACK_SIZE) % PACK_SIZE
				RETURN -1
			CASE 9999
				NOW_GROUP = 1
				RETURN
			CASEELSE
			;キャラが選択された時
				SIF !INRANGE(INPUT_INT, INPUT_MIN, INPUT_MAX)
					GOTO RPG_RETRY
				;ここだけDO-LOOPぬけます
				BREAK
				$RPG_RETRY
				CALL C_INPUT_ERROR("無効な入力です")
				CONTINUE
			ENDSELECT
		ELSE
			;STRで受け取った時、SORT処理なので処理が可能な場合は全てRESTART
			;妙な文字列を受け取った場合にはCONTINUE
			;DO-LOOPを脱出できるのはINTかつ、リスト上のキャラを選択した場合のみ
			CALL CHARA_SORT_CTRL(CHARA_LIST, CHARA_CNT, INPUT_STR, SORT_TYPE)
			IF RESULT
				RETURN -1
			ELSE
				GOTO RPG_RETRY
			ENDIF
		ENDIF
	LOOP 1
	IF STRCOUNT(OP, "「部隊配置」")
		CALL SELECT_SUPPORT(CHARA_LIST:INPUT_INT)
		RETURN -1
	ELSEIF STRCOUNT(OP, "「情報表示」")
		CALL INFO_STATUS_GROUP(CHARA_LIST, INPUT_INT, CHARA_CNT, OP)
		SIF RESULT < 0
			RETURN -1
		NOW_GROUP = 1
		SIF STRCOUNT(OP, "「最終確認」")
			RETURN RESULT
	ELSE
		NOW_GROUP = 1
		RETURN CHARA_LIST:INPUT_INT
	ENDIF
CASEELSE
	GOTO DO_DEFAULT
ENDSELECT


@LIST_CHARA_MEMORY_SORT(CHARA_LIST, CHARA_CNT)
#DIM REF CHARA_LIST
#DIM     CHARA_CNT
#DIM     LIST_ID
#DIM     PREV_TARGET
#DIM     UNIQUE_ID
PREV_TARGET = FINDCHARA(CFLAG:調教対象フラグ, 1, 1)
SIF PREV_TARGET >= 1
	UNIQUE_ID = CFLAG:PREV_TARGET:個別番号
CVARSET CFLAG, GETNUM(CFLAG, "ソート番号"), 1000
CFLAG:MASTER:ソート番号 = -1
FOR LIST_ID, 0, CHARA_CNT
	CFLAG:(CHARA_LIST:LIST_ID):ソート番号 = LIST_ID
NEXT
SORTCHARA CFLAG:ソート番号
CALLF CHANGE_TARGET_ARRAY()
IF PREV_TARGET >= 1
	CALL CHANGE_TARGET_SET(FINDCHARA(CFLAG:個別番号, UNIQUE_ID, 1))
ELSE
	CALL CHANGE_TARGET_CLEAR
ENDIF
CVARSET CFLAG, GETNUM(CFLAG, "ソート番号")
PRINTFORMW 現在のリスト配置を登録番号に反映しました
[SKIPSTART]












[SKIPEND]




