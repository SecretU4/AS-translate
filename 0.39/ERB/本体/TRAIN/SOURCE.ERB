;_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/#
;
;	Module		:SOURCE.ERB
;	Facility	:SOURCE関連処理。
;
;	Licence		:ライセンスフリー。
;
;	Modification Data:
;
;	Edit	Date			Author					Reason
;	001		20XX/XX/XX		----					新規作成
;
;_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/#


;===============================================================================
;  ◇記載関数一覧(記載順)
;
;		Module Name						Explanation
;
; *- XXXX
;
;	・ SOURCE_CHECK_MAIN				SRC反映:主処理
;	・ SRC_CALC_PALAM					SRC計算:PALAM
;	・ SRC_CALC_GOTJUEL					SRC計算:GOTJUEL
;	・ SRC_CALC_EXP						SRC計算:EXP
;
; *- その他
;
;	・ SRC_SHOW_SRC_MAIN				SRC表示:SOURCE(主処理)
;	・ SRC_SHOW_BASE_EXP_MAIN			SRC表示:BASE-EXP(主処理)
;	・ SRC_SHOW_CUP_MAIN				SRC表示:CUP(主処理)
;	・ SRC_PRINT_DATA_MAIN				SRC表示:結果データ(主処理)
;	・ SRC_PRINT_DATA_OUTPUT			SRC表示:結果データ(出力)
;
;===============================================================================

;-------------------------------------------------------------------------------
;   XXXX
;-------------------------------------------------------------------------------

;=================================================
;   sub SOURCE_CHECK_MAIN
;=================================================
;   SRC反映:主処理
;-------------------------------------------------
@SOURCE_CHECK_MAIN
#DIM L_I
#DIM L_T

;-----------------------------
;-- 先に部位集計 → 絶頂処理
;-----------------------------

;- SRC計算:感覚(主処理)
CALL SRC_CALC_SENSE_MAIN

;- SRC計算:絶頂処理(主処理)
CALL SRC_CALC_ORGASM_MAIN

;-----------------------------
;-- 絶頂補正加算後、各SOURCEを反映
;-----------------------------

;- SRC計算:主処理
CALL SRC_CALC_MAIN


FOR L_I, 0, DEFTR_PL_NUM

	L_T = GTR_PL:L_I

	;CHK:END
	SIF L_T < 0
		BREAK

	;- SRC計算:PALAM
	CALL SRC_CALC_PALAM(L_T)

	;- SRC計算:GOTJUEL
	CALL SRC_CALC_GOTJUEL(L_T)

	;- SRC計算:EXP
	CALL SRC_CALC_EXP(L_T)

NEXT

;=================================================
;   sub SRC_CALC_PALAM
;=================================================
;   SRC計算:PALAM
;-------------------------------------------------
; Input:
;  ARG:0				対象者
;-------------------------------------------------
@SRC_CALC_PALAM(ARG)
#DIM L_I
#DIM L_TMP
#DIMS L_STR

FOR L_I, 0, VARSIZE("PALAM")

	L_STR = %PALAMNAME:L_I%

	SIF !STRLENS(L_STR)
		CONTINUE

	;- 取得:(CUP)
	L_TMP = CUP:ARG:L_STR
	IF L_TMP > 0
		PALAM:ARG:L_STR += L_TMP
		PALAM:ARG:L_STR = MIN(PALAM:ARG:L_STR,FLAG:最大数_PALAM)
	ENDIF
NEXT

;=================================================
;   sub SRC_CALC_GOTJUEL
;=================================================
;   SRC計算:GOTJUEL
;-------------------------------------------------
; Input:
;  ARG:0				対象者
;-------------------------------------------------
@SRC_CALC_GOTJUEL(ARG)
#DIM L_I
#DIM L_TMP
#DIMS L_STR

FOR L_I, 0, VARSIZE("GOTJUEL")

	L_STR = %PALAMNAME:L_I%

	SIF !STRLENS(L_STR)
		CONTINUE

	;- 取得:(PALAM)
	L_TMP = PALAM:ARG:L_STR

	;- TR:取得予定珠
	L_TMP = TR_GOTJUEL(L_TMP)

	IF L_TMP > 0
		GOTJUEL:ARG:L_I = L_TMP
	ENDIF
NEXT

;=================================================
;   sub SRC_CALC_EXP
;=================================================
;   SRC計算:EXP
;-------------------------------------------------
; Input:
;  ARG:0				対象者
;-------------------------------------------------
@SRC_CALC_EXP(ARG)
#DIM L_I
#DIM L_TMP
#DIMS L_STR

FOR L_I, 0, VARSIZE("EXP")

	L_STR = %EXPNAME:L_I%

	SIF !STRLENS(L_STR)
		CONTINUE

	L_TMP = GTR_EXPUP:ARG:L_I

	IF L_TMP > 0
		EXP:ARG:L_I += L_TMP
		EXP:ARG:L_I = MIN(FLAG:最大数_EXP, EXP:ARG:L_I)
	ENDIF
NEXT



;-------------------------------------------------------------------------------
;   その他
;-------------------------------------------------------------------------------

;=================================================
;   sub SRC_SHOW_SRC_MAIN
;=================================================
;   SRC表示:SOURCE(主処理)
;-------------------------------------------------
@SRC_SHOW_SRC_MAIN
#DIM L_I
#DIM L_T
#DIM L_HIT

L_HIT=0

FOR L_I, 0, DEFTR_PL_NUM

	L_T = GTR_PL:L_I

	;CHK:END
	SIF L_T < 0
		BREAK

	;CHK:PLAYER
	SIF L_T == PLAYER
		CONTINUE

	;- SRC表示:結果データ(主処理)
	CALL SRC_PRINT_DATA_MAIN(L_T, 1)
	SIF RESULT
		L_HIT = 1

NEXT
SIF L_HIT
	PRINTL


;=================================================
;   sub SRC_SHOW_BASE_EXP_MAIN
;=================================================
;   SRC表示:BASE-EXP(主処理)
;-------------------------------------------------
@SRC_SHOW_BASE_EXP_MAIN
#DIM L_I
#DIM L_T
#DIM L_HIT

L_HIT=0

;-----------------------------
;-- BASE-EXP
;-----------------------------

FOR L_I, 0, DEFTR_PL_NUM

	L_T = GTR_PL:L_I

	;CHK:END
	SIF L_T < 0
		BREAK

	;- SRC:結果データ(主処理)
	CALL SRC_PRINT_DATA_MAIN(L_T, 2)
	SIF RESULT
		L_HIT = 1

NEXT
SIF L_HIT
	PRINTL

;=================================================
;   sub SRC_SHOW_CUP_MAIN
;=================================================
;   SRC表示:CUP(主処理)
;-------------------------------------------------
@SRC_SHOW_CUP_MAIN
#DIM L_I
#DIM L_T
#DIM L_HIT
L_HIT=0

;-----------------------------
;-- CUP
;-----------------------------

FOR L_I, 0, DEFTR_PL_NUM

	L_T = GTR_PL:L_I

	;CHK:END
	SIF L_T < 0
		BREAK

	;- SRC:結果データ(主処理)
	CALL SRC_PRINT_DATA_MAIN(L_T, 3)
	SIF RESULT
		L_HIT = 1

NEXT
SIF L_HIT
	PRINTL


;=================================================
;   sub SRC_PRINT_DATA_MAIN
;=================================================
;   SRC表示:結果データ(主処理)
;-------------------------------------------------
; Input:
;  ARG:0				対象者
;  ARG:1				モード(1:SRC 2:BASE類 3:CUP)
; Output:
;  RETURN				HIT有無
;-------------------------------------------------
@SRC_PRINT_DATA_MAIN(ARG:0, ARG:1)
#DIM L_I
#DIM L_HIT
#DIM L_TMP
#DIMS L_KEY
#DIM L_CNT

;- 初期化
VARSET GVAR_SRC_CHG_NAME
VARSET GVAR_SRC_CHG_VAL
VARSET GVAR_SRC_CHG_COLOR

;-----------------------------
;- モード別処理
;-----------------------------
L_CNT = 0


SELECTCASE ARG:1
	;-----------------------------
	;- SRC
	;-----------------------------
	CASE 1
		FOR L_I, 0, VARSIZE("SOURCE")

			L_KEY = %SOURCENAME:L_I%

			SIF !STRLENS(L_KEY)
				CONTINUE

			L_TMP = SOURCE:ARG:L_KEY
			SIF !L_TMP
				CONTINUE

			GVAR_SRC_CHG_NAME:L_CNT		= %L_KEY%
			GVAR_SRC_CHG_VAL:L_CNT		= L_TMP

			L_CNT ++
		NEXT
	;-----------------------------
	;- BASE類、EXP類
	;-----------------------------
	CASE 2
		FOR L_I, 0, VARSIZE("BASE")

			L_KEY = %BASENAME:L_I%

			SIF !STRLENS(L_KEY)
				CONTINUE

			L_TMP = DOWNBASE:ARG:L_KEY
			SIF !L_TMP
				CONTINUE

			GVAR_SRC_CHG_NAME:L_CNT		= %L_KEY%
			GVAR_SRC_CHG_VAL:L_CNT		= L_TMP

			L_CNT ++
		NEXT
		FOR L_I, 0, VARSIZE("EXP")

			L_KEY = %EXPNAME:L_I%

			SIF !STRLENS(L_KEY)
				CONTINUE

			L_TMP = GTR_EXPUP:ARG:L_I
			SIF !L_TMP
				CONTINUE

			GVAR_SRC_CHG_NAME:L_CNT		= %L_KEY%
			GVAR_SRC_CHG_VAL:L_CNT		= L_TMP

			SELECTCASE L_KEY
				CASE "絶頂経験", "膣射経験"
					GVAR_SRC_CHG_COLOR:L_CNT		= 2
			ENDSELECT

			L_CNT ++
		NEXT

	;-----------------------------
	;- CUP
	;-----------------------------
	CASE 3
		FOR L_I, 0, VARSIZE("SOURCE")

			L_KEY = %PALAMNAME:L_I%

			SIF !STRLENS(L_KEY)
				CONTINUE

			L_TMP = CUP:ARG:L_KEY
			SIF !L_TMP
				CONTINUE

			GVAR_SRC_CHG_NAME:L_CNT		= %L_KEY%
			GVAR_SRC_CHG_VAL:L_CNT		= L_TMP

			SELECTCASE L_KEY
				CASE "快Ｃ", "快Ｖ", "快Ａ", "快Ｂ"
					GVAR_SRC_CHG_COLOR:L_CNT		= 2
				CASE "好意", "屈服"
					GVAR_SRC_CHG_COLOR:L_CNT		= 2
				CASE "恐怖", "苦痛", "反感", "不快", "抑鬱"
					GVAR_SRC_CHG_COLOR:L_CNT		= 1
			ENDSELECT

			L_CNT ++
		NEXT

ENDSELECT

;- SRC表示:結果データ(出力)
CALL SRC_PRINT_DATA_OUTPUT(ARG)

RETURNFORM L_CNT


;=================================================
;   sub SRC_PRINT_DATA_OUTPUT
;=================================================
;   SRC表示:結果データ(出力)
;-------------------------------------------------
; Input:
;  ARG:0				対象者
;-------------------------------------------------
@SRC_PRINT_DATA_OUTPUT(ARG)
#DIM L_I
#DIM L_TMP
#DIM L_LINE
#DIM L_NEWLINE
#DIM L_CNT
#DIMS L_STR
#DIMS L_HEAD
#DIM L_WIDTH_HEAD

L_WIDTH_HEAD = 18

L_LINE = 0
L_NEWLINE = 0

;-- 表示:PALAM
FOR L_I, 0, VARSIZE("GVAR_SRC_CHG_VAL")

	L_TMP = GVAR_SRC_CHG_VAL:L_I

	SIF !L_TMP
		BREAK

	L_STR = \@ L_TMP >= 0 ? + # -\@
	L_STR = %GVAR_SRC_CHG_NAME:L_I%(%L_STR%{ABS(L_TMP)})
	L_STR += " "

	SIF L_CNT + STRLENS(L_STR) > 90
		L_LINE = 0

	IF !L_LINE
		L_LINE = 1

		IF !L_NEWLINE
			L_NEWLINE = 1
			L_HEAD = [%CALLNAME:ARG%]
			PRINTFORM %L_HEAD, L_WIDTH_HEAD, LEFT%: 
		ELSE
			PRINTL
			L_HEAD = 
			PRINTFORM %L_HEAD, L_WIDTH_HEAD, LEFT%  
		ENDIF

		L_CNT = 0
	ENDIF

	SELECTCASE GVAR_SRC_CHG_COLOR:L_I
		CASE 1
			SETCOLOR COLOR("群青")
		CASE 2
			SETCOLOR COLOR("ピンク")
	ENDSELECT

	PRINTS L_STR
	RESETCOLOR

	L_CNT += STRLENS(L_STR)

NEXT
SIF !LINEISEMPTY()
	PRINTL


