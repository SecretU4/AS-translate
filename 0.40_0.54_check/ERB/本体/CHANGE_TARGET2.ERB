;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;;
@CHANGE_TARGET_MAIN2
#DIM L_i = 0       ;入力
#DIM L_n;
#DIM L_page = 0    ;ページ番号
#DIM L_size = 15   ;ページサイズ

L_page = 0

;調教可能対象配列を生成。
L_n = CHANGE_TARGET_ARRAY()

REDRAW 0

WHILE 1

	CALL C_LINE
	PRINTFORML 밀회 대상으로 선택할 캐릭터를 선택하세요　＜page.{L_page}＞
	PRINTFORML 선택중인 조교 대상은 TARGET 마커가 찍혀 있습니다。
	PRINTFORML 선택할 수 있는 것은【합의】【약점】【조교완료】를 가진 캐릭터 뿐입니다。
	DRAWLINE

	;ページ表示。
	CALL CHANGE_TARGET_LIST(L_page * L_size, L_size)
	PRINTL
	PRINTFORMLC \@(!CHANGE_TARGET_IS_PREV(L_page,L_size)) ? %" " * 16% # [1007]이전 페이지\@
	PRINTLC [1000] 돌아온다
	PRINTFORMLC \@(!CHANGE_TARGET_IS_NEXT(L_page,L_size)) ? %" " * 16% # [1009]다음 페이지\@
	PRINTL
	PRINTL

    ;入力コマンド処理。
	WHILE 1
		INPUT
		L_i = RESULT
		SELECTCASE L_i

		CASE 1 TO CHARANUM
			IF CFLAG:L_i:調教対象フラグ
				CALL CHANGE_TARGET_CLEAR
			ELSEIF CHANGE_TARGET_IS(L_i)
				CALL CHANGE_TARGET_SET(L_i)
			ENDIF
			BREAK

		;戻る
		CASE 1000
			REDRAW 1
			RETURN 0
		;이전 페이지
		CASE 1007
			IF CHANGE_TARGET_IS_PREV(L_page,L_size)
				L_page -= 1
				BREAK
			ENDIF
		;다음 페이지
		CASE 1009
			IF CHANGE_TARGET_IS_NEXT(L_page,L_size)
				L_page += 1
				BREAK
			ENDIF

		ENDSELECT
	WEND
WEND


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; TARGET に指定されているキャラの番号を返します。
;;
;; 戻値
;;   TARGET に指定されているキャラの番号を表す整数。
;;
@CHANGE_TARGET_GET()
#FUNCTION
#DIM L_i
FOR L_i, 1, CHARANUM
	SIF CFLAG:L_i:調教対象フラグ != 0
		RETURNF L_i
NEXT
RETURNF -1


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; 指定されたキャラを TARGET に設定します。
;;
;; 引数
;;   ARG     キャラ番号を表す整数。
;;
@CHANGE_TARGET_SET(ARG)
CALL CHANGE_TARGET_CLEAR
CFLAG:ARG:調教対象フラグ = 1
FLAG:調教対象人数 = 1
VARSET GTR_PL, -1
GTR_PL:0 = 0
GTR_PL:1 = ARG


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; TARGET を前の調教可能キャラへ変更します。
;;
@CHANGE_TARGET_PREV()
CALL CHANGE_TARGET_SET_RELATIVE(-1)


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; TARGET を次の調教可能キャラへ変更します。
;;
@CHANGE_TARGET_NEXT()
CALL CHANGE_TARGET_SET_RELATIVE(+1)


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; TARGET を次の調教可能キャラへ変更します。
;;
@CHANGE_TARGET_SET_RELATIVE(ARG:0)
#DIM L_i
#DIM L_n    ; 調教可能キャラの総数。
#DIM L_c    ; 現 TARGET キャラの番号。

L_n = CHANGE_TARGET_ARRAY()
SIF L_n == 0
	RETURN

L_c = CHANGE_TARGET_GET()

FOR L_i, 0, L_n
	SIF GTR_CL:L_i == L_C
		BREAK
NEXT

CALL CHANGE_TARGET_SET(GTR_CL:((L_i - 1 + ARG:0 + L_n) % L_n))


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; 全てのキャラを TARGET から外します。
;;
@CHANGE_TARGET_CLEAR
#DIM L_i
FOR L_i,1,CHARANUM
	CFLAG:L_i:調教対象フラグ = 0
NEXT
FLAG:調教対象人数 = 0


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; 指定されたキャラが TARGET 設定可能か否かを返します。
;;
;; 引数
;;   ARG     キャラ番号を表す整数。
;; 戻値
;;   TARGET 設定可能か否かの真偽値。
;;
@CHANGE_TARGET_IS(ARG)
#FUNCTION
RETURNF (Talent:ARG:합의 != 0 || Talent:ARG:약점 != 0 || Talent:ARG:조교완료 != 0) && TALENT:ARG:부재 == 0 &&  TALENT:ARG:ボランティア <= 0


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; 前ページがあるか否かを返します。
;;
;; 引数
;;   ARG:0   ページ番号を表す整数。
;;   ARG:1   ページサイズを表す整数。
;;
@CHANGE_TARGET_IS_PREV(ARG:0, ARG:1)
#FUNCTION
RETURNF ARG:0 > 0


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; 次ページがあるか否かを返します。
;;
;; 引数
;;   ARG:0   ページ番号を表す整数。
;;   ARG:1   ページサイズを表す整数。
;;
@CHANGE_TARGET_IS_NEXT(ARG:0, ARG:1)
#FUNCTION
RETURNF GTR_CL:((ARG:0 + 1) * ARG:1) > 0


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; TARGET 設定可能なキャラ番号の配列を作成します。
;; 配列は広域配列変数 GTR_CL に格納されます。
;;
@CHANGE_TARGET_ARRAY()
#FUNCTION
#DIM L_i
#DIM L_c
VARSET GTR_CL, -1
L_c = 0
FOR L_i,1,CHARANUM
	IF CHANGE_TARGET_IS(L_i)
    	GTR_CL:L_c = L_i
		L_c++
	ENDIF
NEXT
RETURNF L_c


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; 調教可能なキャラのリストを表示します。
;;
;; 引数
;;   ARG:0   表示開始位置を表す整数。
;;   ARG:1   表示数を表す整数。
;;
@CHANGE_TARGET_LIST(ARG:0, ARG:1)
#DIM L_i
FOR L_i, ARG:0, ARG:0 + ARG:1
	IF GTR_CL:L_i > 0
		PRINTFORM [%TOSTR(GTR_CL:L_i),3%]
		IF CFLAG:(GTR_CL:L_i):調教対象フラグ 
			CALL PRINT_LABEL("TARGET",,COLOR("ピンク"))
		ELSE
			PRINTFORM 　      　
		ENDIF
		CALL INFO_TARGET_DETAIL(GTR_CL:L_i, 1)
	ENDIF
	PRINTL
NEXT
