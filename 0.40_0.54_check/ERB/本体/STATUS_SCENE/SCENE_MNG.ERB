;-------------------------------------------------
;キャラ管理用キャラセレクト関数
;-------------------------------------------------
@MANAGE_CHARA_SELECT(MODE_NOW = "MNG_레귤러指定")
#DIMS         MODE_NOW
#DIM          MODE_ID
#DIM          L_INPUT
#DIM          NOW_GROUP = 1 ;ページ記憶用
#DIM  DYNAMIC ROOM_ID       ;
#DIMS DYNAMIC OP_RELOAD     ;初回以外のページ更新とリスト更新を抑制する
{
#DIMS CONST   MODE_NAME = "MNG_登録_登録抹消", 
	
	"MNG_입주_一号室", 
	"MNG_입주_二号室", 
	"MNG_입주_三号室", 
	"MNG_입주_四号室", 
	"MNG_입주_五号室", 
	"MNG_입주_六号室", 
	"MNG_입주_七号室", 
	"MNG_입주_八号室", 
	"MNG_입주_九号室", 
	"MNG_입주_十号室", 
	
	"MNG_登録_레귤러", 
	"MNG_登録_특별보호", 
	"MNG_登録_名前変更", 
	
	"MNG_転職_성직자", 
	"MNG_転職_메이드", 
	"MNG_転職_아이돌", 
	"MNG_転職_사회인", 
	"MNG_転職_局員", 
	"MNG_転職_창녀", 
	
	"MNG_配属_学園生徒", 
	"MNG_配属_支援ボラ", 
	"MNG_配属_ラブホ店員", 
	"MNG_配属_カジノ店員", 
	
	"MNG_特殊_外見変更", 
	"MNG_特殊_治療設備", 
	"MNG_特殊_품종개량", 
	"MNG_特殊_신체강화", 
	"MNG_特殊_차세대창조", 
	
	"MNG_登録_교우제어", 
	"MNG_登録_衣装変更", 
	"MNG_登録_範囲消去", 
	"MNG_登録_抹消中止"
}

{
#DIMS CONST   MEMO_STR = "등록 말소 후보자를 선택하세요。", 
	
	"1호실에 입주할 인물을 선택하세요。", 
	"2호실에 입주할 인물을 선택하세요。", 
	"3호실에 입주할 인물을 선택하세요。", 
	"4호실에 입주할 인물을 선택하세요。", 
	"5호실에 입주할 인물을 선택하세요。", 
	"6호실에 입주할 인물을 선택하세요。", 
	"7호실에 입주할 인물을 선택하세요。", 
	"8호실에 입주할 인물을 선택하세요。", 
	"9호실에 입주할 인물을 선택하세요。", 
	"10호실에 입주할 인물을 선택하세요。", 
	
	"관찰 상황을 바꿀 인물을 선택하세요。", 
	"보호 지정을 바꿀 대상을 선택하세요。", 
	"이름을 바꿀 대상을 선택하세요。", 
	
	"전직 대상자를 선택하세요", 
	"전직 대상자를 선택하세요", 
	"전직 대상자를 선택하세요", 
	"전직 대상자를 선택하세요", 
	"전직 대상자를 선택하세요", 
	"전직 대상자를 선택하세요", 
	
	"학원 입학 대상자를 선택하세요", 
	"지원 주택 자원봉사 후보자를 선택하세요", 
	"러브호텔 점원 후보자를 선택하세요", 
	"고급 카지노 점원 후보자를 선택하세요", 
	
	"외관 변경 대상자를 선택하세요", 
	"치료 대상자를 선택하세요", 
	"품종 개량 대상자를 선택하세요", 
	"신체 강화 대상자를 선택하세요", 
	"차세대 창조의 모체를 선택하세요", 
	
	"이벤트 설정 대상자를 선택하세요", 
	"의상 변경 대상자를 선택하세요", 
	
	"등록 말소 범위의 시작값을 지정하세요", 
	""
}
#DIM CONST INPUT_MODE_外見変更   = 1024
#DIM CONST INPUT_MODE_治療設備   = 1025
#DIM CONST INPUT_MODE_품종개량   = 1026
#DIM CONST INPUT_MODE_신체강화   = 1027
#DIM CONST INPUT_MODE_차세대창조 = 1028
#DIM CONST INPUT_MODE_抹消中止   = 1032


MODE_ID = FINDELEMENT(MODE_NAME, MODE_NOW)
SELECTCASE MODE_ID
CASE -1
	MODE_NOW '= "MNG_登録_레귤러"
	MODE_ID = FINDELEMENT(MODE_NAME, MODE_NOW)
ENDSELECT
CLEARLINE LINECOUNT
CALL LIST_CHARA_STATUS_MAIN(0, NOW_GROUP, OP_RELOAD, MODE_NOW, MEMO_STR:MODE_ID)



L_INPUT = RESULT
OP_RELOAD '= "「ページ更新無し」「リスト更新無し」"
SELECTCASE L_INPUT
CASE 0
	NOW_GROUP = 1
	CALL MNG_DELETE_CHARA
	RETURN
CASE 1 TO CHARANUM - 1
	SELECTCASE MODE_NOW
	CASE "MNG_登録_레귤러"
		CALL MNG_CHARA_REGULAR(L_INPUT)
	CASE "MNG_登録_특별보호"
		CALL MNG_CHARA_PROTECT(L_INPUT)
	CASE "MNG_登録_名前変更"
		CALL MNG_RENAME(L_INPUT)
	CASE "MNG_登録_登録抹消"
		IF TALENT:L_INPUT:NPC
			CFLAG:L_INPUT:登録抹消 = 0
		ELSEIF CFLAG:L_INPUT:레귤러 || CFLAG:L_INPUT:특별보호 || CFLAG:L_INPUT:マンションID
			CFLAG:L_INPUT:登録抹消 = 0
		ELSE
			CFLAG:L_INPUT:登録抹消 = !CFLAG:L_INPUT:登録抹消
		ENDIF
	CASE "MNG_登録_範囲消去"
	CASE "MNG_登録_抹消中止"
	CASE "MNG_登録_교우제어"
		CALL MNG_CONFIG_EVENT(L_INPUT)
	CASE "MNG_登録_衣装変更"
		CALL MNG_CHANGE_CLOTHES(L_INPUT)
	CASE "MNG_特殊_外見変更"
		CALL MNG_CUSTOM_LOOKS(L_INPUT)
	CASE "MNG_特殊_治療設備"
		CALL MNG_CURE_SICK(L_INPUT)
	CASE "MNG_特殊_품종개량"
		CALL CITY_F_54_GI2(L_INPUT)
	CASE "MNG_特殊_신체강화"
		CALL LABORATORY_BOOST_ST(L_INPUT)
	CASE "MNG_特殊_차세대창조"
		IF CFLAG:L_INPUT:住人_回収済み数  <= CFLAG:L_INPUT:住人_継承
			PRINTFORMW 조건을 만족하지 못했습니다
		ELSE
			CALL LABORATORY_BREEDING_BABY_DESIGNING(L_INPUT)
			OP_RELOAD '= "「ページ更新無し」"
		ENDIF
	CASE "MNG_転職_성직자", "MNG_転職_메이드", "MNG_転職_아이돌", "MNG_転職_사회인", "MNG_転職_局員", "MNG_転職_창녀"
		CALL MNG_JOB(L_INPUT, MODE_NOW)
	CASE "MNG_配属_学園生徒", "MNG_配属_支援ボラ", "MNG_配属_ラブホ店員", "MNG_配属_カジノ店員"
		CALL MNG_FACILITY(L_INPUT, MODE_NOW)
	CASEELSE
		IF STRCOUNT(MODE_NOW, "MNG_입주")
			;マンション입주処理
			ROOM_ID = MODE_ID
			CALL MNG_MOVING_ROOM(L_INPUT, ROOM_ID)
		ELSE

		ENDIF
	ENDSELECT
CASE INPUT_MODE_外見変更
	IF FLAG:エステ >= 1
		MODE_NOW '= MODE_NAME:(L_INPUT % 1000)
	ENDIF
CASE INPUT_MODE_治療設備
	IF FLAG:病院 >= 1
		MODE_NOW '= MODE_NAME:(L_INPUT % 1000)
	ENDIF
CASE INPUT_MODE_품종개량
	IF FLAG:품종개량施設 >= 1
		MODE_NOW '= MODE_NAME:(L_INPUT % 1000)
	ENDIF
CASE INPUT_MODE_신체강화, INPUT_MODE_차세대창조
	IF FLAG:研究施設 >= 1
		MODE_NOW '= MODE_NAME:(L_INPUT % 1000)
	ENDIF
CASE INPUT_MODE_抹消中止
	CVARSET CFLAG, GETNUM(CFLAG, "登録抹消"), 0
	MODE_NOW '= MODE_NAME:0
CASE 1000 TO 1031
	MODE_NOW '= MODE_NAME:(L_INPUT % 1000)
CASEELSE
ENDSELECT
RESTART


;-------------------------------------------------
;MNG用CALLNAME表示関数
;-------------------------------------------------
@MNG_LIST_NAME(C_ID)
#DIM C_ID
SIF C_ID < 0
	RETURN
CALL INFO_TARGET_DELETE(C_ID)
PRINTFORM %SHORTEN_NAME(C_ID), 10, LEFT%
PRINT 　
CALL INFO_TARGET_FACILITY(C_ID, 1)
CALL INFO_TARGET_RELATION(C_ID)



@MNG_入居_LIST_NAME(C_ID)
#DIM C_ID
SIF C_ID < 0
	RETURN
CALL INFO_TARGET_DELETE(C_ID)
PRINTFORM %SHORTEN_NAME(C_ID), 10, LEFT%
PRINT 　
CALL INFO_TARGET_MARRIED(C_ID)
CALL INFO_TARGET_ROOM_NUMBER(C_ID)
CALL INFO_TARGET_JOB(C_ID, 1)

@MNG_入居_一号室_LIST_NAME(C_ID)
#DIM C_ID
CALL MNG_入居_LIST_NAME(C_ID)
@MNG_入居_二号室_LIST_NAME(C_ID)
#DIM C_ID
CALL MNG_入居_LIST_NAME(C_ID)
@MNG_入居_三号室_LIST_NAME(C_ID)
#DIM C_ID
CALL MNG_入居_LIST_NAME(C_ID)
@MNG_入居_四号室_LIST_NAME(C_ID)
#DIM C_ID
CALL MNG_入居_LIST_NAME(C_ID)
@MNG_入居_五号室_LIST_NAME(C_ID)
#DIM C_ID
CALL MNG_入居_LIST_NAME(C_ID)
@MNG_入居_六号室_LIST_NAME(C_ID)
#DIM C_ID
CALL MNG_入居_LIST_NAME(C_ID)
@MNG_入居_七号室_LIST_NAME(C_ID)
#DIM C_ID
CALL MNG_入居_LIST_NAME(C_ID)
@MNG_入居_八号室_LIST_NAME(C_ID)
#DIM C_ID
CALL MNG_入居_LIST_NAME(C_ID)
@MNG_入居_九号室_LIST_NAME(C_ID)
#DIM C_ID
CALL MNG_入居_LIST_NAME(C_ID)
@MNG_入居_十号室_LIST_NAME(C_ID)
#DIM C_ID
CALL MNG_入居_LIST_NAME(C_ID)



@MNG_登録_レギュラー_LIST_NAME(C_ID)
#DIM C_ID
SIF C_ID < 0
	RETURN
CALL INFO_TARGET_DELETE(C_ID)
PRINTFORM %SHORTEN_NAME(C_ID), 10, LEFT%
PRINT 　
CALL INFO_TARGET_REGULAR(C_ID, 1)
CALL INFO_TARGET_PROTECT(C_ID, 1)
CALL INFO_TARGET_ROOM_NUMBER(C_ID)
CALL INFO_TARGET_RELATION(C_ID)



@MNG_登録_特別保護_LIST_NAME(C_ID)
#DIM C_ID
SIF C_ID < 0
	RETURN
CALL INFO_TARGET_DELETE(C_ID)
PRINTFORM %SHORTEN_NAME(C_ID), 10, LEFT%
PRINT 　
CALL INFO_TARGET_REGULAR(C_ID, 1)
CALL INFO_TARGET_PROTECT(C_ID, 1)
CALL INFO_TARGET_ROOM_NUMBER(C_ID)
CALL INFO_TARGET_RELATION(C_ID)



@MNG_転職_LIST_NAME(C_ID)
#DIM C_ID
SIF C_ID < 0
	RETURN
CALL INFO_TARGET_DELETE(C_ID)
PRINTFORM %SHORTEN_NAME(C_ID), 10, LEFT%
CALL INFO_TARGET_JOB(C_ID, 1)
CALL INFO_TARGET_RELATION(C_ID)

@MNG_転職_聖職者_LIST_NAME(C_ID)
#DIM C_ID
CALL MNG_転職_LIST_NAME(C_ID)

@MNG_転職_メイド_LIST_NAME(C_ID)
#DIM C_ID
CALL MNG_転職_LIST_NAME(C_ID)

@MNG_転職_アイドル_LIST_NAME(C_ID)
#DIM C_ID
CALL MNG_転職_LIST_NAME(C_ID)

@MNG_転職_社会人_LIST_NAME(C_ID)
#DIM C_ID
CALL MNG_転職_LIST_NAME(C_ID)

@MNG_転職_局員_LIST_NAME(C_ID)
#DIM C_ID
CALL MNG_転職_LIST_NAME(C_ID)

@MNG_転職_娼婦_LIST_NAME(C_ID)
#DIM C_ID
CALL MNG_転職_LIST_NAME(C_ID)



@MNG_登録_名前変更_LIST_NAME(C_ID)
#DIM C_ID
SIF C_ID < 0
	RETURN
CALL INFO_TARGET_DELETE(C_ID)
PRINTFORM %SHORTEN_NAME(C_ID), 10, LEFT%
PRINT 　
CALL INFO_TARGET_REGULAR(C_ID, 1)
CALL INFO_TARGET_PROTECT(C_ID, 1)
PRINT 　
CALL INFO_TARGET_SAME_NAME(C_ID)



@MNG_特殊_治療設備_LIST_NAME(C_ID)
#DIM C_ID
SIF C_ID < 0
	RETURN
CALL INFO_TARGET_DELETE(C_ID)
PRINTFORM %SHORTEN_NAME(C_ID), 10, LEFT%
CALL INFO_TARGET_ADDICT(C_ID)
CALL INFO_TARGET_FACILITY(C_ID, 1)
CALL INFO_TARGET_RELATION(C_ID)



[SKIPSTART]
@MNG_登録_登録抹消_LIST_NAME(C_ID)
#DIM C_ID
SIF C_ID < 0
	RETURN

MNG_登録_登録抹消

MNG_特殊_治療設備




MNG_配属_学園生徒
MNG_配属_支援ボラ
MNG_配属_ラブホ店員
MNG_配属_カジノ店員

MNG_特殊_外見変更

MNG_特殊_品種改良
MNG_特殊_身体強化
MNG_特殊_次世代創造

MNG_登録_交友制御
MNG_登録_衣装変更
MNG_登録_範囲消去
MNG_登録_抹消中止
[SKIPEND]



;-------------------------------------------------
;MNG用キャラ管理用基礎情報関数
;-------------------------------------------------
@MNG_INFO_TARGET_DETAIL(L_I, L_CATE)
#DIM        L_I
#DIM        L_CATE
#DIMS CONST OP_NAME = "NONE", "시설배속", "신체치료", "품종개량", "신체강화", "차세대창조", "입주", "교우제어"
CALL INFO_TARGET_RANK(L_I)
CALL INFO_TARGET_SUPPORT(L_I)
PRINTFORM 　
CALL INFO_TARGET_GENDER(L_I)
CALL INFO_TARGET_FALLEN(L_I)
PRINTFORM 　

SELECTCASE OP_NAME:L_CATE
CASE "시설배속"
	CALL INFO_TARGET_SOCIALITY(L_I)
CASE "신체치료"
	PRINTFORM 　[매춘:{MIN(EXP:L_I:매춘경험, 999), 3}]
CASE "품종개량"
	CALL INFO_TARGET_GENOM(L_I)
CASE "신체강화"
CASE "차세대창조"
	CALL INFO_TARGET_BREEDING(L_I)
CASE "입주"
;	CALL INFO_TARGET_MARRIED(L_I)
CASE "교우제어"
	CALL INFO_TARGET_PARTNER(L_I)

CASEELSE
ENDSELECT


;-------------------------------------------------
;キャラ管理用基礎情報関数
;-------------------------------------------------
@MNG_INFO_BASIC_DATA(C_ID)
#DIM C_ID
CALL INFO_TARGET_REGULAR(C_ID, 1)
CALL INFO_TARGET_PROTECT(C_ID, 1)
CALL INFO_TARGET_ROOM_NUMBER(C_ID)
CALL INFO_TARGET_RANK(C_ID)
CALL INFO_TARGET_JOB(C_ID, 1)
CALL INFO_TARGET_SUPPORT(C_ID)
CALL INFO_TARGET_FACILITY(C_ID, 1)
CALL INFO_TARGET_GENDER(C_ID)
CALL INFO_TARGET_RELATION(C_ID)



;-------------------------------------------------
;キャラ管理用ラベル使用一行情報表示関数
;-------------------------------------------------
@MNG_INFO_CHARA_DETAIL_LABEL(C_LABEL, C_ID, SORT_TYPE, LABEL_LIST, LABEL_SIZE)
#LOCALSIZE 1
#LOCALSSIZE 1
#DIM      C_LABEL    ;ボタンとして表示させる数値
#DIM      C_ID       ;キャラの登録番号
#DIMS     SORT_TYPE  ;現在のソート順
#DIMS REF LABEL_LIST ;この行で使用するラベル一覧配列
#DIM      LABEL_SIZE ;ラベル一覧配列の要素数
;C_LABELが負数はありえないので表示内容のアナウンスに流用してます
IF C_LABEL < 0
	PRINTFORM %" " * 31%
	CALL INFO_LABEL_LIST(SORT_TYPE, LABEL_LIST, LABEL_SIZE)
	PRINTFORML 
ELSE
	CALL INFO_LABEL_ARRAY(C_ID, LABEL_LIST, LABEL_SIZE)
	PRINTFORML 
ENDIF



;-------------------------------------------------
;キャラ管理用情報ページ定義関数
;-------------------------------------------------
@MNG_DIM_TABLE_LIST_PACK(SCENE, LIST_PACK, PACK_SIZE)
#FUNCTION
#DIMS SCENE
#DIMS REF LIST_PACK ;戻り値用、リスト配列
#DIM  REF PACK_SIZE ;
{
#DIMS CONST C_PACK = "基礎情報", 
	"管理情報", 
	"社会情報", 
	"신체 ST", 
	"페로몬 ST", 
	"探索ABL", 
	"전투 ST", 
	"무장", 
}
ARRAYCOPY "C_PACK", "LIST_PACK"
PACK_SIZE = VARSIZE("C_PACK")
RETURNF



@MNG_LIST_CHARA_STATUS_GROUP(SCENE, CHARA_LIST, SHOW_START, SHOW_END, INPUT_MIN, INPUT_MAX, SORT_TYPE, LIST_NAME)
#DIMS     SCENE         ;使用するシーン
#DIM  REF CHARA_LIST    ;キャラリスト配列
#DIM      SHOW_START    ;表示開始のキャララベルID
#DIM      SHOW_END      ;表示終了のキャララベルID
#DIM      INPUT_MIN     ;表示中キャララベルIDの最小値
#DIM      INPUT_MAX     ;表示中キャララベルIDの最大値
#DIMS     LABEL_LIST, 30;表示内容の取得用
#DIM      LABEL_SIZE    ;表示内容の数
#DIMS     SORT_TYPE     ;現在のソート順
#DIMS     LIST_NAME     ;現在の表示内容
#DIMS     PREV_LIST     ;前回表示した内容
#DIM      C_LABEL       ;キャララベルID
#DIM      DETAIL_OP     ;基礎情報の表示内容の切り替え用

IF LIST_NAME == "基礎情報"
	SELECTCASE SCENE
	CASE "MNG_配属_学園生徒", "MNG_配属_支援ボラ", "MNG_配属_ラブホ店員", "MNG_配属_カジノ店員"
		DETAIL_OP = 1
	CASE "MNG_特殊_治療設備"
		DETAIL_OP = 2
		CASE "MNG_特殊_품종개량"
			DETAIL_OP = 3
		CASE "MNG_特殊_신체강화"
			DETAIL_OP = 4
		CASE "MNG_特殊_차세대창조"
		DETAIL_OP = 5
	{
		CASE "MNG_입주_一号室", "MNG_입주_二号室", "MNG_입주_三号室", "MNG_입주_四号室", "MNG_입주_五号室", 
			"MNG_입주_六号室", "MNG_입주_七号室", "MNG_입주_八号室", "MNG_입주_九号室", "MNG_입주_十号室", 
		}
			DETAIL_OP = 6
		CASE "MNG_登録_교우제어"
		DETAIL_OP = 7
	CASEELSE
		DETAIL_OP = 0
	ENDSELECT

	TRYCCALLFORM %SCENE%_LIST_NAME(-1)
		FOR C_LABEL, SHOW_START, SHOW_END
			IF INRANGE(C_LABEL, INPUT_MIN, INPUT_MAX)
				PRINTFORM [{C_LABEL, 3}]
				CALLFORM %SCENE%_LIST_NAME(CHARA_LIST:C_LABEL)
				CALL MNG_INFO_TARGET_DETAIL(CHARA_LIST:C_LABEL, DETAIL_OP)
			ELSE
			ENDIF
			PRINTL
		NEXT
	CATCH
		FOR C_LABEL, SHOW_START, SHOW_END
			IF INRANGE(C_LABEL, INPUT_MIN, INPUT_MAX)
				PRINTFORM [{C_LABEL, 3}]
				CALL MNG_LIST_NAME(CHARA_LIST:C_LABEL)
				CALL MNG_INFO_TARGET_DETAIL(CHARA_LIST:C_LABEL, DETAIL_OP)
			ELSE
			ENDIF
			PRINTL
		NEXT
	ENDCATCH
	RETURN
ENDIF

;ラベルリスト取得
IF LIST_NAME == PREV_LIST
ELSE
	CALLF DIM_TABLE_LABEL_LIST(LIST_NAME, LABEL_LIST, LABEL_SIZE)
	PREV_LIST '= LIST_NAME
ENDIF

;デバッグ確認用
;CALL VAR_SHOW_STR_ARRAY(LABEL_LIST, LABEL_SIZE)

CALL MNG_INFO_CHARA_DETAIL_LABEL(-1, 0, SORT_TYPE, LABEL_LIST, LABEL_SIZE)
DRAWLINE
TRYCCALLFORM %SCENE%_LIST_NAME(-1)
	FOR C_LABEL, SHOW_START, SHOW_END
		IF INRANGE(C_LABEL, INPUT_MIN, INPUT_MAX)
			PRINTFORM [{C_LABEL, 3}]
			CALLFORM %SCENE%_LIST_NAME(CHARA_LIST:C_LABEL)
			CALL MNG_INFO_CHARA_DETAIL_LABEL(C_LABEL, CHARA_LIST:C_LABEL, SORT_TYPE, LABEL_LIST, LABEL_SIZE)
		ELSE
			PRINTL
		ENDIF
	NEXT
CATCH
	FOR C_LABEL, SHOW_START, SHOW_END
		IF INRANGE(C_LABEL, INPUT_MIN, INPUT_MAX)
			PRINTFORM [{C_LABEL, 3}]
			CALL MNG_LIST_NAME(CHARA_LIST:C_LABEL)
			CALL MNG_INFO_CHARA_DETAIL_LABEL(C_LABEL, CHARA_LIST:C_LABEL, SORT_TYPE, LABEL_LIST, LABEL_SIZE)
		ELSE
			PRINTL
		ENDIF
	NEXT
ENDCATCH



@MNG_LIST_CHARA_INPUT(SCENE, OP, CHARA_LIST, CHARA_CNT, NOW_GROUP, LAST_GROUP, LIST_PACK, PACK_PAGE, PACK_SIZE, INPUT_MIN, INPUT_MAX, SORT_TYPE, GET_LIST)
#DIMS     SCENE      ;使用場面
#DIMS     OP         ;オプション文字列
#DIM  REF CHARA_LIST ;キャラリスト一覧配列
#DIM      CHARA_CNT  ;リスト中のキャラ数
#DIM  REF NOW_GROUP  ;現在表示中のキャラグループ
#DIM      LAST_GROUP ;キャラグループの最後尾
#DIMS REF LIST_PACK  ;パックリスト配列
#DIM  REF PACK_PAGE  ;表示データのページ数
#DIM      PACK_SIZE  ;パックリスト配列のサイズ
#DIM      INPUT_MIN  ;表示中キャララベルIDの最小値
#DIM      INPUT_MAX  ;表示中キャララベルIDの最大値
#DIMS REF SORT_TYPE  ;現在のソート順
#DIM  REF GET_LIST   ;キャラリスト更新処理用フラグ
#DIMS     INPUT_STR  ;入力内容の一時保持
#DIM      INPUT_INT  ;入力内容の一時保持
#DIM      L_INPUT    ;入力内容の一時保持

#DIM DYNAMIC L_SUP_CNT, 4         ;各部隊に配属済みのキャラ数

;ボタン長さ：
;[----] - 
;%LIST_PACK:((PACK_PAGE - 1 + PACK_SIZE) % PACK_SIZE), 20%
;
;情報移動はボタン部9、ラベル部20で29
;キャラ移動はボタン部9、ラベル部14で23
PRINTFORM %" " * 29%
PRINTFORM 　　
SIF CHARA_CNT > 0 && NOW_GROUP > 1
	PRINTBUTTON "[8888] - 　이전 캐릭터　", "8888"
PRINTFORML 
PRINTFORM 　
PRINTBUTTON @"[4444] - %LIST_PACK:((PACK_PAGE - 1 + PACK_SIZE) % PACK_SIZE), 20%", "4444"
PRINTFORM 　
PRINTFORM %" " * 23%
PRINTFORM 　
PRINTBUTTON @"[6666] - %LIST_PACK:((PACK_PAGE + 1 + PACK_SIZE) % PACK_SIZE), 20%", "6666"
PRINTFORML 
PRINTFORM 　

PRINTFORM %" " * 29%
PRINTFORM 　
IF CHARA_CNT > 0 && NOW_GROUP < LAST_GROUP
	PRINTBUTTON "[2222] - 　다음 캐릭터　", "2222"
ELSE
	PRINTFORM %" " * 23%
ENDIF
PRINTFORM 　
PRINTBUTTON "[3333] - 　　　　표시 인원 수 변경", "3333"
PRINTFORML 
{
IF GROUPMATCH(SCENE, 
	"MNG_登録_登録抹消", 
	"MNG_입주_一号室", "MNG_입주_二号室", "MNG_입주_三号室", "MNG_입주_四号室", "MNG_입주_五号室", 
	"MNG_입주_六号室", "MNG_입주_七号室", "MNG_입주_八号室", "MNG_입주_九号室", "MNG_입주_十号室", 
	
	"MNG_登録_레귤러", "MNG_登録_특별보호", "MNG_登録_名前変更", 
	"MNG_転職_성직자", "MNG_転職_메이드", "MNG_転職_아이돌", "MNG_転職_사회인", "MNG_転職_局員", "MNG_転職_창녀", 
	"MNG_配属_学園生徒", "MNG_配属_支援ボラ", "MNG_配属_ラブホ店員", "MNG_配属_カジノ店員", 
	"MNG_特殊_外見変更", "MNG_特殊_治療設備", "MNG_特殊_품종개량", "MNG_特殊_신체강화", "MNG_特殊_차세대창조", 
	"MNG_登録_교우제어", "MNG_登録_衣装変更", "MNG_登録_範囲消去", "MNG_登録_抹消中止"
	)
}

	
	DRAWLINE
	PRINTFORM 　등록｜
	SIF SCENE == "MNG_登録_레귤러"
		SETCOLOR COLOR("黄色")
	PRINTBUTTON "[1011] - 레귤러", "1011"
	PRINTFORM 　
	RESETCOLOR
	SIF SCENE == "MNG_登録_특별보호"
		SETCOLOR COLOR("黄色")
	PRINTBUTTON "[1012] - 　특별 보호", "1012"
	PRINTFORM 　
	RESETCOLOR
	SIF SCENE == "MNG_登録_名前変更"
		SETCOLOR COLOR("黄色")
	PRINTBUTTON "[1013] - 　이름 변경", "1013"
	PRINTFORM 　
	RESETCOLOR
	SIF SCENE == "MNG_登録_교우제어"
		SETCOLOR COLOR("黄色")
	PRINTBUTTON "[1029] - 　교우 제어", "1029"
	PRINTFORM 　
	RESETCOLOR
	SIF SCENE == "MNG_登録_衣装変更"
		SETCOLOR COLOR("黄色")
	PRINTBUTTON "[1030] - 　의상 변경", "1030"
	PRINTFORM 　
	RESETCOLOR
	PRINTFORML
	
	
	PRINTFORM 　전직｜
	SIF SCENE == "MNG_転職_성직자"
		SETCOLOR COLOR("黄色")
	PRINTBUTTON "[1014] - 　　성직자", "1014"
	PRINTFORM 　
	RESETCOLOR
	SIF SCENE == "MNG_転職_메이드"
		SETCOLOR COLOR("黄色")
	PRINTBUTTON "[1015] - 　　메이드", "1015"
	PRINTFORM 　
	RESETCOLOR
	SIF SCENE == "MNG_転職_아이돌"
		SETCOLOR COLOR("黄色")
	PRINTBUTTON "[1016] - 　　아이돌", "1016"
	PRINTFORM 　
	RESETCOLOR
	SIF SCENE == "MNG_転職_사회인"
		SETCOLOR COLOR("黄色")
	PRINTBUTTON "[1017] - 　　사회인", "1017"
	PRINTFORM 　
	RESETCOLOR
	SIF SCENE == "MNG_転職_局員"
		SETCOLOR COLOR("黄色")
	PRINTBUTTON "[1018] - 　치안국 직원", "1018"
	PRINTFORML
	RESETCOLOR
	PRINTFORM 　　　｜
	SIF SCENE == "MNG_転職_창녀"
		SETCOLOR COLOR("黄色")
	PRINTBUTTON "[1019] - 　　	창녀", "1019"
	PRINTFORM 　
	RESETCOLOR
	PRINTFORML
	
	PRINTFORM 　배속｜
	IF FLAG:学園 <= 0
		SETCOLOR COLOR("灰色")
		PRINTFORM [----] - 　？？？？
	ELSE
		SIF SCENE == "MNG_配属_学園生徒"
			SETCOLOR COLOR("黄色")
		PRINTBUTTON "[1020] - 　학원 학생", "1020"
	ENDIF
	PRINTFORM 　
	RESETCOLOR
	IF FLAG:支援住宅 <= 0
		SETCOLOR COLOR("灰色")
		PRINTFORM [----] - 　？？？？
	ELSE
		SIF SCENE == "MNG_配属_支援ボラ"
			SETCOLOR COLOR("黄色")
		PRINTBUTTON "[1021] - 　지원 봉사자", "1021"
	ENDIF
	PRINTFORM 　
	RESETCOLOR
	IF FLAG:ラブホテル <= 0
		SETCOLOR COLOR("灰色")
		PRINTFORM [----] - ？？？？？
	ELSE
		SIF SCENE == "MNG_配属_ラブホ店員"
			SETCOLOR COLOR("黄色")
		PRINTBUTTON "[1022] - 러브호텔 점원", "1022"
	ENDIF
	PRINTFORM 　
	RESETCOLOR
	IF FLAG:高級カジノ <= 0
		SETCOLOR COLOR("灰色")
		PRINTFORM [----] - ？？？？？
	ELSE
		SIF SCENE == "MNG_配属_カジノ店員"
			SETCOLOR COLOR("黄色")
		PRINTBUTTON "[1023] - 카지노 점원", "1023"
	ENDIF
	RESETCOLOR
	PRINTFORML
	
	PRINTFORM 　입주｜
	IF FLAG:5031 && SCENE == "MNG_입주_一号室"
		SETCOLOR COLOR("ピンク")
	ELSEIF SCENE == "MNG_입주_一号室"
		SETCOLOR COLOR("黄色")
	ELSEIF FLAG:5031
		SETCOLOR COLOR("紫")
	ENDIF
	PRINTBUTTON "[1001] - 　　1호실", "1001"
	PRINTFORM 　
	RESETCOLOR
	IF FLAG:5032 && SCENE == "MNG_입주_二号室"
		SETCOLOR COLOR("ピンク")
	ELSEIF SCENE == "MNG_입주_二号室"
		SETCOLOR COLOR("黄色")
	ELSEIF FLAG:5032
		SETCOLOR COLOR("紫")
	ENDIF
	PRINTBUTTON "[1002] - 　　2호실", "1002"
	PRINTFORM 　
	RESETCOLOR
	IF FLAG:5033 && SCENE == "MNG_입주_三号室"
		SETCOLOR COLOR("ピンク")
	ELSEIF SCENE == "MNG_입주_三号室"
		SETCOLOR COLOR("黄色")
	ELSEIF FLAG:5033
		SETCOLOR COLOR("紫")
	ENDIF
	PRINTBUTTON "[1003] - 　　3호실", "1003"
	PRINTFORM 　
	RESETCOLOR
	IF FLAG:5034 && SCENE == "MNG_입주_四号室"
		SETCOLOR COLOR("ピンク")
	ELSEIF SCENE == "MNG_입주_四号室"
		SETCOLOR COLOR("黄色")
	ELSEIF FLAG:5034
		SETCOLOR COLOR("紫")
	ENDIF
	PRINTBUTTON "[1004] - 　　4호실", "1004"
	PRINTFORM 　
	RESETCOLOR
	IF FLAG:5035 && SCENE == "MNG_입주_五号室"
		SETCOLOR COLOR("ピンク")
	ELSEIF SCENE == "MNG_입주_五号室"
		SETCOLOR COLOR("黄色")
	ELSEIF FLAG:5035
		SETCOLOR COLOR("紫")
	ENDIF
	PRINTBUTTON "[1005] - 　　5호실", "1005"
	PRINTFORM 　
	RESETCOLOR
	PRINTFORML

	PRINTFORM 　　　｜
	IF FLAG:5036 && SCENE == "MNG_입주_六号室"
		SETCOLOR COLOR("ピンク")
	ELSEIF SCENE == "MNG_입주_六号室"
		SETCOLOR COLOR("黄色")
	ELSEIF FLAG:5036
		SETCOLOR COLOR("紫")
	ENDIF
	PRINTBUTTON "[1006] - 　　6호실", "1006"
	PRINTFORM 　
	RESETCOLOR
	IF FLAG:5037 && SCENE == "MNG_입주_七号室"
		SETCOLOR COLOR("ピンク")
	ELSEIF SCENE == "MNG_입주_七号室"
		SETCOLOR COLOR("黄色")
	ELSEIF FLAG:5037
		SETCOLOR COLOR("紫")
	ENDIF
	PRINTBUTTON "[1007] - 　　7호실", "1007"
	PRINTFORM 　
	RESETCOLOR
	IF FLAG:5038 && SCENE == "MNG_입주_八号室"
		SETCOLOR COLOR("ピンク")
	ELSEIF SCENE == "MNG_입주_八号室"
		SETCOLOR COLOR("黄色")
	ELSEIF FLAG:5038
		SETCOLOR COLOR("紫")
	ENDIF
	PRINTBUTTON "[1008] - 　　8호실", "1008"
	PRINTFORM 　
	RESETCOLOR
	IF FLAG:5039 && SCENE == "MNG_입주_九号室"
		SETCOLOR COLOR("ピンク")
	ELSEIF SCENE == "MNG_입주_九号室"
		SETCOLOR COLOR("黄色")
	ELSEIF FLAG:5039
		SETCOLOR COLOR("紫")
	ENDIF
	SIF SCENE == "MNG_입주_九号室"
		SETCOLOR COLOR("黄色")
	PRINTBUTTON "[1009] - 　　9호실", "1009"
	PRINTFORM 　
	RESETCOLOR
	IF FLAG:5040 && SCENE == "MNG_입주_十号室"
		SETCOLOR COLOR("ピンク")
	ELSEIF SCENE == "MNG_입주_十号室"
		SETCOLOR COLOR("黄色")
	ELSEIF FLAG:5040
		SETCOLOR COLOR("紫")
	ENDIF
	PRINTBUTTON "[1010] - 　　10호실", "1010"
	PRINTFORM 　
	RESETCOLOR
	PRINTFORML
	
	PRINTFORM 　특수｜
	IF FLAG:エステ <= 0
		SETCOLOR COLOR("灰色")
		PRINTFORM [----] - 　？？？？
	ELSE
		SIF SCENE == "MNG_特殊_外見変更"
			SETCOLOR COLOR("黄色")
		PRINTBUTTON "[1024] - 　외모 변경", "1024"
	ENDIF
	PRINTFORM 　
	RESETCOLOR
	
	IF FLAG:病院 <= 0
		SETCOLOR COLOR("灰色")
		PRINTFORM [----] - 　？？？？
		ELSE
		SIF SCENE == "MNG_特殊_治療設備"
			SETCOLOR COLOR("黄色")
		PRINTBUTTON "[1025] - 　치료 설비", "1025"
	ENDIF
	PRINTFORM 　
	RESETCOLOR
	
	IF FLAG:품종개량施設 <= 0
		SETCOLOR COLOR("灰色")
		PRINTFORM [----] - 　？？？？
	ELSE
		SIF SCENE == "MNG_特殊_품종개량"
			SETCOLOR COLOR("黄色")
		PRINTBUTTON "[1026] - 　품종 개량", "1026"
	ENDIF
	PRINTFORM 　
	RESETCOLOR
	
	IF FLAG:研究施設 <= 0
		SETCOLOR COLOR("灰色")
		PRINTFORM [----] - 　？？？？
	ELSE
		SIF SCENE == "MNG_特殊_신체강화"
			SETCOLOR COLOR("黄色")
		PRINTBUTTON "[1027] - 　신체 강화", "1027"
	ENDIF
	PRINTFORM 　
	RESETCOLOR
	
	IF FLAG:研究施設 <= 0
		SETCOLOR COLOR("灰色")
		PRINTFORM [----] - ？？？？？
	ELSE
		SIF SCENE == "MNG_特殊_차세대창조"
			SETCOLOR COLOR("黄色")
		PRINTBUTTON "[1028] - 차세대 창조", "1028"
	ENDIF
	PRINTFORM 　
	RESETCOLOR
	PRINTFORML
	
	PRINTFORM 　소거｜
	SIF SCENE == "MNG_登録_登録抹消"
		SETCOLOR COLOR("黄色")
	PRINTBUTTON "[1000] - 　등록 말소", "1000"
	PRINTFORM 　
	RESETCOLOR
	
	SIF SCENE == "MNG_登録_範囲消去"
		SETCOLOR COLOR("黄色")
	PRINTBUTTON "[1031] - 　범위 소거", "1031"
	PRINTFORM 　
	RESETCOLOR
	
	SIF SCENE == "MNG_登録_抹消中止"
		SETCOLOR COLOR("黄色")
	PRINTBUTTON "[1032] - 　말소 중지", "1032"
	PRINTFORM 　
	RESETCOLOR
	PRINTFORML
ELSE
ENDIF

DRAWLINE
PRINTFORM 　
PRINTBUTTON "[9999] - 　　　　돌아온다　　　　", "9999"
PRINTFORML 
PRINTFORML 
DO
	INPUTS
	INPUT_STR '= RESULTS
	SIF !STRLENS(INPUT_STR)
		GOTO MNG_RETRY
	IF ISNUMERIC(INPUT_STR)
		INPUT_INT = TOINT(INPUT_STR)
		SELECTCASE INPUT_INT
		;登録抹消/範囲消去/抹消中止
		CASE 1000, 1031, 1032
			RETURN INPUT_INT
		;マンション입주
		CASE 1001 TO 1010
			RETURN INPUT_INT
			
		;레귤러/특별보호/名前変更/교우제어/衣装変更
		CASE 1011, 1012, 1013, 1029, 1030
			RETURN INPUT_INT
		
		;転職系
		CASE 1014 TO 1019
			;SIF MONEY <= 500000
			;	GOTO MNG_RETRY
			RETURN INPUT_INT
		;施設利用系
		CASE 1020
			SIF FLAG:学園 <= 0
				GOTO MNG_RETRY
			RETURN INPUT_INT
		CASE 1021
			SIF FLAG:支援住宅 <= 0
				GOTO MNG_RETRY
			RETURN INPUT_INT
		CASE 1022
			SIF FLAG:ラブホテル <= 0
				GOTO MNG_RETRY
			RETURN INPUT_INT
		CASE 1023
			SIF FLAG:高級カジノ <= 0
				GOTO MNG_RETRY
			RETURN INPUT_INT
		CASE 1024
			SIF FLAG:エステ <= 0
				GOTO MNG_RETRY
			RETURN INPUT_INT
		CASE 1025
			SIF FLAG:病院 <= 0
				GOTO MNG_RETRY
			RETURN INPUT_INT
		CASE 1026
			SIF FLAG:품종개량施設 <= 0
				GOTO MNG_RETRY
			RETURN INPUT_INT
		CASE 1027, 1028
			SIF FLAG:研究施設 <= 0
				GOTO MNG_RETRY
			RETURN INPUT_INT
		CASE 8888
			SIF !(CHARA_CNT > 0 && NOW_GROUP > 1)
				GOTO MNG_RETRY
			NOW_GROUP --
			RETURN -1
		CASE 2222
			SIF !(CHARA_CNT > 0 && NOW_GROUP < LAST_GROUP)
				GOTO MNG_RETRY
			NOW_GROUP ++
			RETURN -1
		CASE 3333
			PRINTFORML 페이지 최대 표시 인원 숫자를 선택or입력하세요（1～999명）
			PRINTFORM [5] 5명 
			PRINTFORM [10] 10명 
			PRINTFORM [15] 15명 
			PRINTFORML [20] 20명 
			PRINTFORML [0] 변경하지 않는다
			INPUT
			L_INPUT = RESULT
			IF INRANGE(L_INPUT, 1, 999)
				FLAG:定数_カフェ表示数 = L_INPUT
				PRINTFORMW 표시 인원을 {L_INPUT}명으로 변경했습니다
				GET_LIST = 1
				NOW_GROUP = 1
			ENDIF
			RETURN -1
		CASE 4444
			PACK_PAGE = (PACK_PAGE - 1 + PACK_SIZE) % PACK_SIZE
			RETURN -1
		CASE 6666
			PACK_PAGE = (PACK_PAGE + 1 + PACK_SIZE) % PACK_SIZE
			RETURN -1
		CASE 9999
			NOW_GROUP = 1
			RETURN
		CASEELSE
		;キャラが選択された時
			SIF !INRANGE(INPUT_INT, INPUT_MIN, INPUT_MAX)
				GOTO MNG_RETRY
			;ここだけDO-LOOPぬけます
			BREAK
			$MNG_RETRY
			CALL C_INPUT_ERROR("無効な入力です")
			CONTINUE
		ENDSELECT
	ELSE
		;STRで受け取った時、SORT処理なので処理が可能な場合は全てRESTART
		;妙な文字列を受け取った場合にはCONTINUE
		;DO-LOOPを脱出できるのはINTかつ、リスト上のキャラを選択した場合のみ
		CALL CHARA_SORT_CTRL(CHARA_LIST, CHARA_CNT, INPUT_STR, SORT_TYPE)
		IF RESULT
			RETURN -1
		ELSE
			GOTO MNG_RETRY
		ENDIF
	ENDIF
LOOP 1

IF STRCOUNT(OP, "「정보 표시」")
	CALL INFO_STATUS_GROUP(CHARA_LIST, INPUT_INT, CHARA_CNT, OP)
	SIF RESULT < 0
		RETURN -1
	SIF STRCOUNT(OP, "「최종 확인」")
		RETURN RESULT
ELSEIF SCENE == "MNG_登録_範囲消去"
	FOR LOCAL, INPUT_INT, CHARA_CNT
		SIF TALENT:(CHARA_LIST:LOCAL):NPC
			CONTINUE
		SIF CFLAG:(CHARA_LIST:LOCAL):레귤러
			CONTINUE
		SIF CFLAG:(CHARA_LIST:LOCAL):특별보호
		CONTINUE
		SIF CFLAG:(CHARA_LIST:LOCAL):マンションID
			CONTINUE
		CFLAG:(CHARA_LIST:LOCAL):登録抹消 = 1
	NEXT
	RETURN CHARA_LIST:INPUT_INT
ELSE
	RETURN CHARA_LIST:INPUT_INT
ENDIF




;-------------------------------------------------
;フラグ利用一括キャラ削除関数
;-------------------------------------------------
@MNG_DELETE_CHARA
SIF FINDCHARA(CFLAG:登録抹消, 1) == -1
	RETURN

PRINTFORMW 주민 등록 말소를 실시합니다
FOR LOCAL, CHARANUM - 1, 0, -1
	SIF !CFLAG:LOCAL:登録抹消
		CONTINUE
	PRINTFORML 　[%CALLNAME:LOCAL%]は 당신의 관리에서 벗어났습니다
	DELCHARA LOCAL
NEXT
WAIT



;-------------------------------------------------
;레귤러指定管理関数
;-------------------------------------------------
@MNG_CHARA_REGULAR(L_C_ID)
#DIM         L_C_ID               ;対象登録番号
#DIM DYNAMIC LIST_REGULAR, 300    ;레귤러リスト
#DIM DYNAMIC CNT_REGULAR          ;레귤러キャラのカウント
#DIM         L_C_ID_REMOVE        ;解任対象登録番号
IF L_C_ID == MASTER
	PRINTFORMW ≪「플레이어」、당신의 모니터링은 불필요합니다≫
	RETURN
ELSEIF CFLAG:L_C_ID:레귤러
	CFLAG:L_C_ID:레귤러 = 0
	RETURN
ENDIF
CLEARLINE LINECOUNT
CALL INFO_STATUS_HEADER(L_C_ID)
CALL C_PICTURE_S(L_C_ID)
DRAWLINE
PRINTFORML 　현재 모니터링 대상
DRAWLINE
CALL SHOW_ALL_REGULAR(LIST_REGULAR, CNT_REGULAR, "「ボタン無し」")
DRAWLINE

IF CNT_REGULAR >= 20
;上限
	PRINTFORML 관찰 대상 인원이 너무 많습니다。
	PRINTFORML 관찰을 중지할 캐릭터를 선택하세요。
	PRINTFORML
	FOR LOCAL, 0, 20
		IF TALENT:(LIST_REGULAR:LOCAL):부재
			SETCOLOR COLOR("灰色")
			PRINT ---
			PRINTFORM [%CALLNAME:(LIST_REGULAR:LOCAL), 18%]
		ELSE
			PRINTBUTTON @"{LIST_REGULAR:LOCAL, 3}[%CALLNAME:(LIST_REGULAR:LOCAL), 18%]", LIST_REGULAR:LOCAL
		ENDIF
		RESETCOLOR
		PRINTFORM 　
		SIF LOCAL % 5 == 4
			PRINTFORML
	NEXT
	PRINTFORML
	PRINTFORML [999] - 캐릭터 선택으로 돌아온다
	DO
		INPUT
		L_C_ID_REMOVE = RESULT
		SIF L_C_ID_REMOVE == 999
			RETURN
		IF !INRANGE(L_C_ID_REMOVE, 1, CHARANUM - 1)
		ELSEIF TALENT:L_C_ID_REMOVE:부재
		ELSEIF CFLAG:L_C_ID_REMOVE:레귤러 != 1
		ELSE
			BREAK
		ENDIF
	LOOP 1
	CALL REGULAR_CHARA_REMOVE(L_C_ID_REMOVE)
ENDIF
CFLAG:L_C_ID:레귤러 = 1



;-------------------------------------------------
;레귤러指定解除関数
;-------------------------------------------------
@REGULAR_CHARA_REMOVE(L_C_ID)
#DIM         L_C_ID               ;観察対象キャラの登録番号
SIF TALENT:L_C_ID:부재 == 0
	PRINTFORMW %CALLNAME:L_C_ID%의 관찰 지정을 해제합니다。
CFLAG:L_C_ID:레귤러 = 0



;-------------------------------------------------
;레귤러指定関数
;-------------------------------------------------
@REGULAR_CHARA_SET(L_C_ID)
#DIM         L_C_ID               ;観察対象キャラの登録番号
IF CFLAG:L_C_ID:레귤러
	PRINTFORMW %CALLNAME:L_C_ID%は 이미 관찰 대상으로 지정되어 있습니다。
	PRINTFORML 관찰을 중지할까요？
	PRINTFORML [1] - 중지한다
	PRINTFORML [0] - 속행한다
	DO
		INPUT
		SIF RESULT == 1
			BREAK
		SIF RESULT == 0
			RETURN
	LOOP 1
	CALL REGULAR_CHARA_REMOVE(L_C_ID)
	RETURN
ENDIF
PRINTFORMW %CALLNAME:L_C_ID%を 관찰 대상으로 지정했습니다。
CFLAG:L_C_ID:레귤러 = 1



@SHOW_ALL_REGULAR(LIST_REGULAR, CNT_REGULAR, OP)
#DIM  REF LIST_REGULAR
#DIM  REF CNT_REGULAR
#DIM      C_ID
#DIMS     OP
VARSET LIST_REGULAR
VARSET CNT_REGULAR
IF STRCOUNT(OP, "「ボタン無し」")
	FOR C_ID, 1, CHARANUM
		SIF CFLAG:C_ID:레귤러 != 1
			CONTINUE
		SIF TALENT:C_ID:부재
			SETCOLOR COLOR("灰色")
		PRINTFORM [%CALLNAME:C_ID, 18%]
		RESETCOLOR
		SIF CNT_REGULAR % 5 == 4
			PRINTFORML
		LIST_REGULAR:CNT_REGULAR = C_ID
		CNT_REGULAR ++
	NEXT
	SIF (CNT_REGULAR - 1) % 5 != 4
		PRINTFORML
ELSE
	FOR C_ID, 1, CHARANUM
		SIF CFLAG:C_ID:레귤러 != 1
			CONTINUE
		IF TALENT:C_ID:부재
			SETCOLOR COLOR("灰色")
			PRINT ---
			PRINTFORM [%CALLNAME:C_ID, 18%]
		ELSE
			PRINTBUTTON @"{C_ID, 3}[%CALLNAME:C_ID, 18%]", C_ID
		ENDIF
		RESETCOLOR
		PRINTFORM 　
		SIF CNT_REGULAR % 5 == 4
			PRINTFORML
		LIST_REGULAR:CNT_REGULAR = C_ID
		CNT_REGULAR ++
	NEXT
	SIF (CNT_REGULAR - 1) % 5 != 4
		PRINTFORML
ENDIF





;-------------------------------------------------
;특별보호管理関数
;-------------------------------------------------
@MNG_CHARA_PROTECT(L_C_ID)
#DIM         L_C_ID               ;対象登録番号
#DIM DYNAMIC LIST_PROTECT, 300    ;특별보호リスト
#DIM DYNAMIC CNT_PROTECT          ;특별보호キャラのカウント
#DIM         L_C_ID_REMOVE        ;解任対象登録番号
IF L_C_ID == 0
	PRINTFORMW ≪「플레이어」、당신은 이미 보호받고 있습니다≫
	RETURN
ELSEIF CFLAG:L_C_ID:특별보호
	;解任
	CFLAG:L_C_ID:특별보호 = 0
	RETURN
ENDIF
CLEARLINE LINECOUNT
CALL INFO_STATUS_HEADER(L_C_ID)
CALL C_PICTURE_S(L_C_ID)
DRAWLINE
PRINTFORML 　현재 특별 보호 대상
DRAWLINE
CALL SHOW_ALL_PROTECT(LIST_PROTECT, CNT_PROTECT, "「ボタン無し」")
DRAWLINE

IF CNT_PROTECT >= 30
	;上限
	PRINTFORML 보호 대상이 너무 많습니다。
	PRINTFORML 보호 대상에서 제외할 캐릭터를 선택하세요。
	PRINTFORML
	FOR LOCAL, 0, CNT_PROTECT
		IF TALENT:(LIST_PROTECT:LOCAL):부재
			SETCOLOR COLOR("灰色")
			PRINT ---
			PRINTFORM [%CALLNAME:(LIST_PROTECT:LOCAL), 18%]
		ELSE
			PRINTBUTTON @"{LIST_PROTECT:LOCAL, 3}[%CALLNAME:(LIST_PROTECT:LOCAL), 18%]", LIST_PROTECT:LOCAL
		ENDIF
		RESETCOLOR
		PRINTFORM 　
		SIF LOCAL % 5 == 4
			PRINTFORML
	NEXT
	SIF (CNT_PROTECT - 1) % 5 != 4
		PRINTFORML
	PRINTFORML
	PRINTFORML [999] - 캐릭터 선택으로 돌아온다
	DO
		INPUT
		L_C_ID_REMOVE = RESULT
		SIF L_C_ID_REMOVE == 999
			RETURN
		IF !INRANGE(L_C_ID_REMOVE, 1, CHARANUM - 1)
		ELSEIF TALENT:L_C_ID_REMOVE:부재
		ELSEIF CFLAG:L_C_ID_REMOVE:특별보호 != 1
		ELSE
			BREAK
		ENDIF
	LOOP 1
	CALL PROTECT_CHARA_REMOVE(L_C_ID_REMOVE)

ENDIF
CFLAG:L_C_ID:특별보호 = 1



;-------------------------------------------------
;특별보호解除関数
;-------------------------------------------------
@PROTECT_CHARA_REMOVE(L_C_ID)
#DIM         L_C_ID               ;保護対象キャラの登録番号
SIF TALENT:L_C_ID:부재 == 0
	PRINTFORMW %CALLNAME:L_C_ID%を 보호 대상에서 제외했습니다。
CFLAG:L_C_ID:특별보호 = 0


;-------------------------------------------------
;특별보호指定関数
;-------------------------------------------------
@PROTECT_CHARA_SET(L_C_ID)
#DIM         L_C_ID               ;保護対象キャラの登録番号
IF CFLAG:L_C_ID:특별보호
	PRINTFORMW %CALLNAME:L_C_ID%は 이미 보호 대상으로 지정되어 있습니다。
	PRINTFORML 보호를 중지할까요？
	PRINTFORML [1] - 중지한다
	PRINTFORML [0] - 속행한다
	DO
		INPUT
		SIF RESULT == 1
			BREAK
		SIF RESULT == 0
			RETURN
	LOOP 1
	CALL PROTECT_CHARA_REMOVE(L_C_ID)
	RETURN
ENDIF
PRINTFORMW %CALLNAME:L_C_ID%を 보호 대상으로 지정했습니다。
CFLAG:L_C_ID:특별보호 = 1



@SHOW_ALL_PROTECT(LIST_PROTECT, CNT_PROTECT, OP)
#DIM  REF LIST_PROTECT
#DIM  REF CNT_PROTECT
#DIM      C_ID
#DIMS     OP
VARSET LIST_PROTECT
VARSET CNT_PROTECT
IF STRCOUNT(OP, "「ボタン無し」")
	FOR C_ID, 1, CHARANUM
		SIF CFLAG:C_ID:특별보호 != 1
			CONTINUE
		SIF TALENT:C_ID:부재
			SETCOLOR COLOR("灰色")
		PRINTFORM [%CALLNAME:C_ID, 18%]
		RESETCOLOR
		SIF CNT_PROTECT % 5 == 4
			PRINTFORML
		LIST_PROTECT:CNT_PROTECT = C_ID
		CNT_PROTECT ++
	NEXT
	SIF (CNT_PROTECT - 1) % 5 != 4
		PRINTFORML
ELSE
	FOR C_ID, 1, CHARANUM
		SIF CFLAG:C_ID:특별보호 != 1
			CONTINUE
		IF TALENT:C_ID:부재
			SETCOLOR COLOR("灰色")
			PRINT ---
			PRINTFORM [%CALLNAME:C_ID, 18%]
		ELSE
			PRINTBUTTON @"{C_ID, 3}[%CALLNAME:C_ID, 18%]", C_ID
		ENDIF
		RESETCOLOR
		PRINTFORM 　
		SIF CNT_PROTECT % 5 == 4
			PRINTFORML
		LIST_PROTECT:CNT_PROTECT = C_ID
		CNT_PROTECT ++
	NEXT
	SIF (CNT_PROTECT - 1) % 5 != 4
		PRINTFORML
ENDIF





@MNG_FACILITY(L_C_ID, MODE_NOW)
#DIM          L_C_ID               ;対象キャラの登録番号
#DIMS         MODE_NOW
#DIM  DYNAMIC TEMP_ID
#DIM  DYNAMIC FACI_ID
{
#DIMS CONST   MODE_NAME     = 
	"MNG_配属_学園生徒", 
	"MNG_配属_支援ボラ", 
	"MNG_配属_ラブホ店員", 
	"MNG_配属_カジノ店員"
}
{
#DIM          L_FACI_LIST     = 
	1, 
	7,
	50,
	53
}
#DIM  DYNAMIC L_CNT_WOKER, 4        ;各施設に配属済みのキャラ数
#DIM  CONST   L_CFLAG_START = 10000 ;施設用CFLAGの開始値
#DIM  CONST   L_CFLAG_END   = 10100 ;施設用CFLAGの終了値（このID自体は含まれない）
#DIM L_CHARA_ORDER                  ;対象キャラがすでに配属されている施設

TEMP_ID = FINDELEMENT(MODE_NAME, MODE_NOW)
SIF TEMP_ID == -1
	RETURN
FACI_ID = L_FACI_LIST:TEMP_ID
L_CHARA_ORDER = FINDELEMENT(CFLAG:L_C_ID:0, 1, L_CFLAG_START, L_CFLAG_END)
IF L_CHARA_ORDER == L_CFLAG_START + FACI_ID
	CFLAG:L_C_ID:(L_CFLAG_START + FACI_ID) = 0
	RETURN
ENDIF

CLEARLINE LINECOUNT
CALL INFO_STATUS_HEADER(L_C_ID)
CALL C_PICTURE_S(L_C_ID)
DRAWLINE
PRINTFORML 　현재 배속된 캐릭터
DRAWLINE
CALL SHOW_ALL_WORKERS(L_FACI_LIST, L_CNT_WOKER, "「ボタン無し」", L_C_ID)
DRAWLINE
IF L_CNT_WOKER:TEMP_ID >= 5
	PRINTFORML %CFLAGNAME:(L_CFLAG_START + FACI_ID)%의 인원이 너무 많습니다
	PRINTFORML 해임할 캐릭터를 선택하세요。
	FOR LOCAL, 1, CHARANUM
		SIF TALENT:LOCAL:부재
			CONTINUE
		SIF CFLAG:LOCAL:(L_CFLAG_START + FACI_ID) == 0
			CONTINUE
		PRINTFORML [{LOCAL, 3}] - %CALLNAME:LOCAL%
	NEXT
	PRINTFORML [999] - 그만둔다
	DO
		INPUT
		LOCAL = RESULT
		SELECTCASE LOCAL
		CASE 999
			RETURN
		CASE 1 TO CHARANUM -1
			SIF TALENT:LOCAL:부재
				CONTINUE
			SIF CFLAG:LOCAL:(L_CFLAG_START + FACI_ID) == 0
				CONTINUE
			BREAK
		CASEELSE
			CONTINUE
		ENDSELECT
	LOOP 1
	CFLAG:LOCAL:(L_CFLAG_START + FACI_ID) = 0
ENDIF
SIF L_CHARA_ORDER > 0
	CFLAG:L_C_ID:L_CHARA_ORDER = 0
CFLAG:L_C_ID:(L_CFLAG_START + FACI_ID) = 1



@MNG_JOB(L_C_ID, MODE_NOW)
#DIM          L_C_ID               ;対象キャラの登録番号
#DIMS         MODE_NOW
{
#DIMS CONST   MODE_NAME = 
	"MNG_転職_성직자", 
	"MNG_転職_메이드", 
	"MNG_転職_아이돌", 
	"MNG_転職_사회인", 
	"MNG_転職_局員", 
	"MNG_転職_창녀"
}
{
#DIM  CONST   JOB_ID = 
	93, 
	94, 
	96, 
	97, 
	99, 
	98
}
#DIM DYNAMIC TEMP_ID
TEMP_ID = FINDELEMENT(MODE_NAME, MODE_NOW)
SIF TEMP_ID < 0
	RETURN
TEMP_ID = JOB_ID:TEMP_ID
IF MONEY < 500000
	PRINTFORMW 자금 500000이 팔요합니다
	RETURN
ENDIF

CLEARLINE LINECOUNT
CALL INFO_STATUS_HEADER(L_C_ID)
DRAWLINE
CALL C_PICTURE_S(L_C_ID)


IF MODE_NOW == "MNG_転職_창녀"
	DRAWLINE
	PRINTFORML 자금 500000을 소비하여 
	IF TALENT:L_C_ID:창녀
		PRINTFORML %CALLNAME:L_C_ID%의 업무 내용을 재검토합니다
		PRINTFORML 괜찮을까요？
		PRINTFORML [1] - 매춘을 멈추게 한다
		PRINTFORML [0] - 그대로
	ELSE
		PRINTFORML %CALLNAME:L_C_ID%에게 성처리 업무를 맡깁니다
		PRINTFORML 괜찮을까요？
		PRINTFORML [1] - 매춘시킨다
		PRINTFORML [0] - 그대로
	ENDIF
	DO
		INPUT
		SIF RESULT == 0
			RETURN
		SIF RESULT == 1
			BREAK
	LOOP 1
	IF TALENT:L_C_ID:창녀
		PRINTFORMW %CALLNAME:L_C_ID%は 매춘에서 손을 떼었다
	ELSE
		PRINTFORMW %CALLNAME:L_C_ID%は 매춘하기 시작했다
	ENDIF
	TALENT:L_C_ID:창녀 = !TALENT:L_C_ID:창녀
	MONEY -= 500000
	RETURN
ELSEIF TALENT:L_C_ID:TEMP_ID == 1
	RETURN
ENDIF
DRAWLINE
PRINTFORML 자금 500000을 소비하여 %CALLNAME:L_C_ID%에게 %TALENTNAME:TEMP_ID%의 업무를 맡깁니다
PRINTFORML 괜찮을까요？
PRINTFORML [1] - 전직 실행
PRINTFORML [0] - 그만둔다
DO
	INPUT
	SIF RESULT == 0
		RETURN
	SIF RESULT == 1
		BREAK
LOOP 1
TALENT:L_C_ID:성직자 = 0
TALENT:L_C_ID:메이드 = 0
TALENT:L_C_ID:아이돌 = 0
TALENT:L_C_ID:사회인 = 0
TALENT:L_C_ID:치안유지국직원 = 0
TALENT:L_C_ID:TEMP_ID = 1
PRINTFORMW %CALLNAME:L_C_ID%は %TALENTNAME:TEMP_ID%に 되었다
MONEY -= 500000



@MNG_MOVING_ROOM(C_ID, ROOM_ID)
#DIM C_ID
#DIM ROOM_ID
#DIM SWAP_ID
IF !INRANGE(ROOM_ID, 1, 10)
	RETURN
ELSEIF C_ID == MASTER
	RETURN
ELSEIF TALENT:C_ID:NPC
	RETURN
ELSEIF CFLAG:C_ID:住人_体格 == 1
	PRINTFORMW 아이는 입주할 수 없습니다。
	RETURN
ENDIF

;同じ部屋番号ならリセット
IF FLAG:(5000 + ROOM_ID) == CFLAG:C_ID:個別番号
	FLAG:(5000 + ROOM_ID) = 0
	CFLAG:C_ID:マンションID = 0
	RETURN
ELSEIF CFLAG:C_ID:マンションID == ROOM_ID
	FLAG:(5000 + CFLAG:C_ID:マンションID) = 0
	CFLAG:C_ID:マンションID = 0
	RETURN
ENDIF

;他のキャラが입주済みのとき
IF FLAG:(5000 + ROOM_ID)
	;該当キャラの検索
	SWAP_ID = FINDCHARA(CFLAG:個別番号, FLAG:(5000 + ROOM_ID), 1, CHARANUM)
	IF SWAP_ID >= 1
		CFLAG:SWAP_ID:マンションID = CFLAG:C_ID:マンションID
		;입주予定者が既に部屋に入っているなら入れ替え処理
		IF CFLAG:C_ID:マンションID
			FLAG:(5000 + CFLAG:C_ID:マンションID) = CFLAG:SWAP_ID:個別番号
			CFLAG:SWAP_ID:マンションID = CFLAG:C_ID:マンションID
		;そうでないなら部屋から出るだけ
		ELSE
			CFLAG:SWAP_ID:マンションID = 0
		ENDIF
	ENDIF
	FLAG:(5000 + ROOM_ID) = CFLAG:C_ID:個別番号
	CFLAG:C_ID:マンションID = ROOM_ID
ELSE
	FLAG:(5000 + CFLAG:C_ID:マンションID) = 0
	FLAG:(5000 + ROOM_ID) = CFLAG:C_ID:個別番号
	CFLAG:C_ID:マンションID = ROOM_ID
ENDIF



@MNG_CUSTOM_LOOKS(L_I)
#DIM         L_I
#DIM DYNAMIC L_CHANGE_H_COLOR = -1 ;
#DIM DYNAMIC L_CHANGE_H_STYLE = -1 ;えっちすたいるではなくヘアスタイルだ
#DIM DYNAMIC L_CHANGE_UH_STYLE = -1 ;
#DIM DYNAMIC L_CHANGE_E_COLOR = -1 ;
#DIM DYNAMIC L_CHANGE_B_COLOR = -1 ;
#DIM         L_NOW_H_COLOR         ;画像表示用に一時変更する
#DIM         L_NOW_H_STYLE         ;
#DIM         L_NOW_UH_STYLE         ;
#DIM         L_NOW_E_COLOR         ;
#DIM         L_NOW_B_COLOR         ;
#DIM         L_PARTS_TYPE
IF !INRANGE(L_I, 0, CHARANUM - 1)
	RETURN
ELSEIF L_I == MASTER
	RETURN
ELSEIF TALENT:L_I:NPC
	RETURN
ELSEIF MONEY < 10000
	PRINTFORMW 자금이 부족합니다。
	RETURN
ENDIF
;変更前の状態を保存
L_NOW_H_COLOR = CFLAG:L_I:髪色
L_NOW_H_STYLE = CFLAG:L_I:髪型
L_NOW_UH_STYLE = CFLAG:L_I:後髪型
L_NOW_E_COLOR = CFLAG:L_I:瞳色
L_NOW_B_COLOR = CFLAG:L_I:肌色

DO
	CLEARLINE LINECOUNT
	DRAWLINE
	PRINTFORML %CALLNAME:L_I%의 외모를 변경합니다
{
	CALL PRINT_LABEL("머리색",,,@"%INFO_STR_HAIRCOLOR(L_NOW_H_COLOR), 20%→\@
					L_CHANGE_H_COLOR == -1 ? 変更なし # %INFO_STR_HAIRCOLOR(L_CHANGE_H_COLOR)%\@",,,,,,,, 1)
}
{
	CALL PRINT_LABEL("前髪",,,@"%INFO_STR_HAIR(L_NOW_H_STYLE), 20%→\@
					L_CHANGE_H_STYLE == -1 ? 変更なし # %INFO_STR_HAIR(L_CHANGE_H_STYLE)%\@",,,,,,,, 1)
}
{
	CALL PRINT_LABEL("後髪",,,@"%INFO_STR_U_HAIR(L_NOW_H_STYLE), 20%→\@
					L_CHANGE_H_STYLE == -1 ? 変更なし # %INFO_STR_U_HAIR(L_CHANGE_UH_STYLE)%\@",,,,,,,, 1)
}
{
	CALL PRINT_LABEL("눈동자 색",,,@"%INFO_STR_EYECOLOR(L_NOW_E_COLOR), 20%→\@
					L_CHANGE_E_COLOR == -1 ? 変更なし # %INFO_STR_EYECOLOR(L_CHANGE_E_COLOR)%\@",,,,,,,, 1)
}
{
	CALL PRINT_LABEL("肌色",,,@"%INFO_STR_SKINCOLOR(L_NOW_B_COLOR), 20%→\@
					L_CHANGE_B_COLOR == -1 ? 変更なし # %INFO_STR_SKINCOLOR(L_CHANGE_B_COLOR)%\@",,,,,,,, 1)
}
	DRAWLINE
	PRINTFORML 　　　　　
	PRINTFORML 　　　　　
	PRINTFORML 　　　　　
	PRINTFORML 　　　　　　→
	PRINTFORML 　　　　　
	PRINTFORML 　　　　　
	PRINTFORML 　　　　　
	CFLAG:L_I:髪色 = L_NOW_H_COLOR
	CFLAG:L_I:髪型 = L_NOW_H_STYLE
	CFLAG:L_I:後髪型 = L_NOW_UH_STYLE
	CFLAG:L_I:瞳色 = L_NOW_E_COLOR
	CFLAG:L_I:肌色 = L_NOW_B_COLOR
	
	HTML_PRINT C_PICTURE_HTML(L_I, 0, -702, 0, 850)
	SIF L_CHANGE_H_COLOR > -1
		CFLAG:L_I:髪色 = L_CHANGE_H_COLOR
	SIF L_CHANGE_H_STYLE > -1
		CFLAG:L_I:髪型 = L_CHANGE_H_STYLE
	SIF L_CHANGE_UH_STYLE > -1
		CFLAG:L_I:後髪型 = L_CHANGE_UH_STYLE
	SIF L_CHANGE_E_COLOR > -1
		CFLAG:L_I:瞳色 = L_CHANGE_E_COLOR
	SIF L_CHANGE_B_COLOR > -1
		CFLAG:L_I:肌色 = L_CHANGE_B_COLOR
	HTML_PRINT C_PICTURE_HTML(L_I, 800, -800, 0, 850)
	DRAWLINE
	PRINTFORML [0] 변경을 리셋
	DRAWLINE
	PRINTFORML [1] 머리카락 색 변경
	IF FLAG:エステ >= 3
		PRINTFORML [2] 前髪の変更
	ELSE
		PRINTFORML  前髪の変更(레벨 3이상 필요)
	ENDIF
	IF FLAG:エステ >= 3
		PRINTFORML [3] 後髪の変更
	ELSE
		PRINTFORML  後髪の変更(레벨 3이상 필요)
	ENDIF
	IF FLAG:エステ >= 6
		PRINTFORML [4] 눈동자 색 변경
	ELSE
		PRINTFORML  눈동자 색 변경(레벨 6이상 필요)
	ENDIF
	IF FLAG:エステ >= 9
		PRINTFORML [5] 肌色の変更
	ELSE
		PRINTFORML  肌色の変更(レベル9以上必要)
	ENDIF
	PRINTFORML 
	PRINTFORML [100] 적용　(￥10000)
	PRINTFORML [999] 돌아온다
	INPUT
	SELECTCASE RESULT
	CASE 0
		L_CHANGE_H_COLOR = -1
		L_CHANGE_H_STYLE = -1
		L_CHANGE_UH_STYLE = -1
		L_CHANGE_E_COLOR = -1
		L_CHANGE_B_COLOR = -1
	CASE 1
		FOR L_PARTS_TYPE, 10, -1, -1
			PRINTFORML [{L_PARTS_TYPE, 2}] %INFO_STR_HAIRCOLOR(L_PARTS_TYPE)%
		NEXT
		PRINTFORML 
		PRINTFORML [-1] 변경 없음
		DO
			INPUT
			L_PARTS_TYPE = RESULT
			SIF INRANGE(L_PARTS_TYPE, -1, 10)
				BREAK
		LOOP 1
		L_CHANGE_H_COLOR = L_PARTS_TYPE
	CASE 2
		SIF FLAG:エステ < 3
			CONTINUE
		FOR L_PARTS_TYPE, 29, -1, -1
			PRINTFORML [{L_PARTS_TYPE, 2}] %INFO_STR_HAIR(L_PARTS_TYPE)%
		NEXT
		PRINTFORML 
		PRINTFORML [-1] 변경 없음
		DO
			INPUT
			L_PARTS_TYPE = RESULT
			SIF INRANGE(L_PARTS_TYPE, -1, 29)
				BREAK
		LOOP 1
		L_CHANGE_H_STYLE = L_PARTS_TYPE
	CASE 3
		SIF FLAG:エステ < 3
			CONTINUE
		FOR L_PARTS_TYPE, 29, -1, -1
			PRINTFORML [{L_PARTS_TYPE, 2}] %INFO_STR_U_HAIR(L_PARTS_TYPE)%
		NEXT
		PRINTFORML 
		PRINTFORML [-1] 변경 없음
		DO
			INPUT
			L_PARTS_TYPE = RESULT
			SIF INRANGE(L_PARTS_TYPE, -1, 29)
				BREAK
		LOOP 1
		L_CHANGE_UH_STYLE = L_PARTS_TYPE
	CASE 4
		SIF FLAG:エステ < 6
			CONTINUE
		FOR L_PARTS_TYPE, 5, -1, -1
			PRINTFORML [{L_PARTS_TYPE, 2}] %INFO_STR_EYECOLOR(L_PARTS_TYPE)%
		NEXT
		PRINTFORML 
		PRINTFORML [-1] 변경 없음
		DO
			INPUT
			L_PARTS_TYPE = RESULT
			SIF INRANGE(L_PARTS_TYPE, -1, 5)
				BREAK
		LOOP 1
		L_CHANGE_E_COLOR = L_PARTS_TYPE
	CASE 5
		SIF FLAG:エステ < 9
			CONTINUE
		FOR L_PARTS_TYPE, 5, -1, -1
			PRINTFORML [{L_PARTS_TYPE, 2}] %INFO_STR_SKINCOLOR(L_PARTS_TYPE)%
		NEXT
		PRINTFORML 
		PRINTFORML [-1] 변경 없음
		DO
			INPUT
			L_PARTS_TYPE = RESULT
			SIF INRANGE(L_PARTS_TYPE, -1, 5)
				BREAK
		LOOP 1
		L_CHANGE_B_COLOR = L_PARTS_TYPE
	CASE 100
		IF ALLSAMES(-1, L_CHANGE_H_COLOR, L_CHANGE_H_STYLE, L_CHANGE_UH_STYLE, L_CHANGE_E_COLOR, L_CHANGE_B_COLOR)
			PRINTFORMW 변경 내용이 설정되지 않았습니다。
			CONTINUE
		;何らかの処理が適用される場合は個別に抜けるよ
		ELSEIF L_CHANGE_H_COLOR >= 0 && L_CHANGE_H_COLOR != L_NOW_H_COLOR
		ELSEIF L_CHANGE_H_STYLE >= 0 && L_CHANGE_H_STYLE != L_NOW_H_STYLE
		ELSEIF L_CHANGE_UH_STYLE >= 0 && L_CHANGE_UH_STYLE != L_NOW_UH_STYLE
		ELSEIF L_CHANGE_E_COLOR >= 0 && L_CHANGE_E_COLOR != L_NOW_E_COLOR
		ELSEIF L_CHANGE_B_COLOR >= 0 && L_CHANGE_B_COLOR != L_NOW_B_COLOR
		ELSE
			PRINTFORMW %CALLNAME:L_I%는 이미 지정된 외모와 같습니다。
			CONTINUE
		ENDIF
		
		PRINTFORMW %CALLNAME:L_I%의 외모를 변경했습니다。
		MONEY -= 10000
		RETURN
	CASE 999
		CFLAG:L_I:髪色 = L_NOW_H_COLOR
		CFLAG:L_I:髪型 = L_NOW_H_STYLE
		CFLAG:L_I:後髪型 = L_NOW_UH_STYLE
		CFLAG:L_I:瞳色 = L_NOW_E_COLOR
		CFLAG:L_I:肌色 = L_NOW_B_COLOR
		RETURN
	ENDSELECT
LOOP 1



@MNG_CURE_SICK(L_I)
#DIM         L_I
#DIM         L_MONEY
#DIM         L_INPUT
IF !INRANGE(L_I, 0, CHARANUM - 1)
	RETURN
ELSEIF L_I == MASTER
	RETURN
ELSEIF TALENT:L_I:NPC
	RETURN
ELSEIF TALENT:L_I:쾌락중독 <= 0
	RETURN
ENDIF
L_MONEY = MIN(100000, 2000 + (EXP:L_I:매춘경험 * 10))
CLEARLINE LINECOUNT
CALL INFO_STATUS_HEADER(L_I)
DRAWLINE
CALL C_PICTURE_S(L_I)
PRINTFORML %CALLNAME:L_I%의 쾌락 중독 치료엔 ￥{L_MONEY}이 필요합니다
PRINTFORML 치료하시겠습니까？
PRINTFORML 
PRINTFORML [0] 네
PRINTFORML [1] 아니오
INPUT
L_INPUT = RESULT
SELECTCASE L_INPUT
CASE 0
	IF MONEY <= L_MONEY
		PRINTFORML 치료비가 부족합니다。
		RETURN
	ENDIF
	TALENT:L_I:쾌락중독 = 0
	PRINTFORMW %CALLNAME:L_I%を 치료했습니다。
ENDSELECT



@MNG_CONFIG_EVENT(L_I)
#DIM        L_I
#DIM        L_INPUT
#DIMS CONST STR_EVE_RATE = "NG", "적음", "보통", "많음"
#DIMS CONST STR_EVE_LIMIT = "NG", "친구", "베프", "연인", "무제한"
IF !INRANGE(L_I, 0, CHARANUM - 1)
	RETURN
ELSEIF L_I == MASTER
	RETURN
ELSEIF TALENT:L_I:NPC
	RETURN
ENDIF
CLEARLINE LINECOUNT
CALL INFO_STATUS_HEADER(L_I)
DRAWLINE
CALL C_PICTURE_S(L_I)
DRAWLINE
PRINTFORML 변경하고 싶은 이벤트 경향을 선택하세요。
DRAWLINE
PRINTFORML  [0] 교류 이벤트(빈도：%STR_EVE_RATE:(LIMIT(CFlag:L_I:住人イベント傾向_交流 / 30, 0, 3))%)
PRINTFORML  [1] 연애 이벤트(빈도：%STR_EVE_RATE:(LIMIT(CFlag:L_I:住人イベント傾向_恋愛 / 30, 0, 3))%)
PRINTFORML  [2] 범죄 이벤트(빈도：%STR_EVE_RATE:(LIMIT(CFlag:L_I:住人イベント傾向_犯罪 / 30, 0, 3))%)
PRINTFORML  [3] 성적인 이벤트(빈도：%STR_EVE_RATE:(LIMIT(CFlag:L_I:住人イベント傾向_性 / 30, 0, 3))%)
PRINTFORML [10] 주민 교류 상한(상한：%STR_EVE_LIMIT:(LIMIT(CFlag:L_I:住人交流設定, 0, 4))%)
PRINTFORML [20] 교류 대상 즐겨찾기 지정
PRINTFORML 
PRINTFORML [999] 돌아온다
INPUT
L_INPUT = RESULT
SELECTCASE L_INPUT
CASE 999
	RETURN
CASE 20
	CALL MNG_CONFIG_PARTNER(L_I)
CASE 10
	CFlag:L_I:(3950+L_INPUT) += 1
	SIF CFlag:L_I:(3950+L_INPUT) >= 5
		CFlag:L_I:(3950+L_INPUT) = 0
CASE 0, 1, 2, 3
	CFlag:L_I:(3950+L_INPUT) += 30
	SIF CFlag:L_I:(3950+L_INPUT) >= 100
		CFlag:L_I:(3950+L_INPUT) = 0
CASEELSE
ENDSELECT
RESTART



;-------------------------------------------------
; 各交流住人
;-------------------------------------------------
@MNG_CONFIG_PARTNER(L_I)
#DIM L_NPC
#DIM L_INPUT
#DIM L_I
#DIMS CONST NPC_LV = "애인", "지인", "친구", "베프", "연인", "남편"
CLEARLINE LINECOUNT
CALL INFO_STATUS_HEADER(L_I)
DRAWLINE
CALL C_PICTURE_S(L_I)
DRAWLINE
PRINTFORML 교류 대상의 즐겨찾기 지정、이름을 변경할 수 있습니다。
DRAWLINE
PRINTFORML [-1] 즐겨찾기 해제
FOR L_NPC, 0, 10
	IF CSTR:L_I:(3000+L_NPC) == ""
		CALL PRINT_LABEL("미등록")
		PRINTL
	ELSE
		SIF CFLAG:L_I:3600 == L_NPC
			SETCOLOR 50,250,250
		PRINTBUTTON @"[{10 + L_NPC}] 이름 변경", 10 + L_NPC
		PRINTFORM 　
		PRINTBUTTON @"[{L_NPC}] %CSTR:L_I:(3000+L_NPC), 18 ,LEFT%", L_NPC
		IF CFLAG:L_I:(3030+L_NPC) == 1
			CALL PRINT_LABEL("남")
		ELSE
			CALL PRINT_LABEL("녀")
		ENDIF
		SELECTCASE CFLAG:L_I:(3020+L_NPC)
		CASE 1 TO 5, -5
			CALL PRINT_LABEL("관계",,,NPC_LV:(MAX(0, CFLAG:L_I:(3020+L_NPC))))
		ENDSELECT
		CALL PRINT_LABEL("호감도",,,TOSTR(CFLAG:L_I:(3010+L_NPC)), -3)
		CALL PRINT_LABEL("상성",,,TOSTR(CFLAG:L_I:(3050+L_NPC)), -3)
		CALL PRINT_LABEL("성행위 횟수",,,TOSTR(CFLAG:L_I:(3060+L_NPC)))
		PRINTFORML
	ENDIF
	RESETCOLOR
NEXT
DRAWLINE
PRINTFORML [999] 돌아온다
DO
	INPUT
	L_INPUT = RESULT
	SELECTCASE L_INPUT
	CASE -1
		CFLAG:L_I:3600 = -1
		CALL PRINT_LABEL("즐겨찾기를 해제했습니다")
		PRINTW
	CASE 999
		; CALL JN_CONFIG
		RETURN
	CASE 10 TO 19
		CALL PRINT_LABEL("교류 대상의 이름을 변경합니다、입력하지 않으면 변경하지 않습니다。")
		PRINTL
		DRAWLINE
		INPUTS
		IF RESULTS == ""
			;スルー
		ELSE
			L_NPC = L_INPUT % 10
			SIF CFLAG:L_I:(3020 + L_NPC) == 5
				CSTR:L_I:伴侶名前 = %RESULTS%
			CSTR:L_I:(3000 + L_NPC) = %RESULTS%
			CALL PRINT_LABEL(@"이름을 %CSTR:L_I:(3000 + L_NPC)%に 변경했습니다")
			PRINTL
			SIF TALENT:L_I:아이같음 || TALENT:L_I:깜찍함
				CSTR:L_I:一人称 = %CALLNAME:L_I%
		ENDIF
	CASE 0 TO 9
		SIF CSTR:L_I:(3000 + L_INPUT) == ""
			RESTART
		CFLAG:L_I:3600 = L_INPUT
		CALL PRINT_LABEL(@"%CSTR:L_I:(3000 + L_INPUT)%を 즐겨찾기 대상으로 지정했습니다")
		PRINTL
		PRINTFORMW 즐겨찾기에 등록한 주민은 교류 발생이 많아지며、호감도・상성 증가에 보정이 붙습니다。
	CASEELSE
		CONTINUE
	ENDSELECT
	BREAK
LOOP 1
RESTART




@MNG_RENAME(C_ID)
#DIM          C_ID
#DIM          NAME_ID
#DIM          NAME_CNT
#DIMS DYNAMIC NAME_LIST, 30
#DIMS DYNAMIC HURIGANA_LIST, 30
IF !INRANGE(C_ID, 0, CHARANUM - 1)
	RETURN
ELSEIF C_ID == MASTER
	RETURN
ELSEIF TALENT:C_ID:NPC
	RETURN
ENDIF
CLEARLINE LINECOUNT
CALL INFO_STATUS_HEADER(C_ID)
DRAWLINE
CALL C_PICTURE_S(C_ID)
DRAWLINE
PRINTFORML 새로운 이름을 선택하세요（よみがなは記録されません）
DRAWLINE
CALL MAKE_NAMELIST(NAME_LIST, HURIGANA_LIST)
FOR NAME_ID, 0, 30
	PRINTBUTTON @"[{NAME_ID, 2}] %NAME_LIST:NAME_ID, 8% %HURIGANA_LIST:NAME_ID, 10% 同名{CNT_SAME_NAME(C_ID, NAME_LIST:NAME_ID), 3}", NAME_ID
	PRINTFORM 　
	SIF NAME_ID % 3 == 2
		PRINTFORML 
NEXT
PRINTFORML 
PRINTFORML [100] 스스로 입력한다
PRINTFORML [900] 이름 후보 재생성
PRINTFORML [999] 취소
DO
	INPUT
	SELECTCASE RESULT
	CASE 999
		RETURN
	CASE 900
		RESTART
	CASE 100
		PRINTFORML 새로운 이름을 입력하세요
		INPUTS
		IF RESULTS == ""
			;スルー
			RESTART
		ELSE
			PRINTFORMW 이름 변경을 마쳤습니다
			CALLNAME:C_ID '= RESULTS
			SIF TALENT:C_ID:아이같음 || TALENT:C_ID:깜찍함
				CSTR:C_ID:一人称 '= CALLNAME:C_ID
			RETURN
		ENDIF
	CASE 0 TO 29
		NAME_ID  = RESULT
		NAME_CNT = CNT_SAME_NAME(C_ID, NAME_LIST:NAME_ID)
		PRINTFORML %CALLNAME:C_ID%의 새로운 이름은 %NAME_LIST:NAME_ID%（%HURIGANA_LIST:NAME_ID%）입니다
		SIF NAME_CNT
			PRINTFORML 같은 이름의 캐릭터는 {NAME_CNT}명 존재합니다
		PRINTFORML 이런 이름으로 괜찮을까요？
		PRINTFORML [1] - %NAME_LIST:NAME_ID%으로 결정한다
		PRINTFORML [0] - 다시 생각한다
		DO
			INPUT
			SELECTCASE RESULT
			CASE 1
				PRINTFORMW 이름 변경을 마쳤습니다
				CALLNAME:C_ID '= NAME_LIST:NAME_ID
				SIF TALENT:C_ID:아이같음 || TALENT:C_ID:깜찍함
					CSTR:C_ID:一人称 '= CALLNAME:C_ID
				RETURN
			CASE 0
				RESTART
			ENDSELECT
		LOOP 1
	CASEELSE
		CONTINUE
	ENDSELECT
LOOP 1





@CULC_COST_COS_CHANGE(MEMO_COS, NEW_COS, COS_PRICE)
#FUNCTION
#DIM REF     MEMO_COS
#DIM REF     NEW_COS
#DIM REF     COS_PRICE
#DIM DYNAMIC SUM_PRICE
FOR LOCAL, 0, 7
	SIF NEW_COS:LOCAL < 0
		CONTINUE
	SIF MEMO_COS:LOCAL == NEW_COS:LOCAL
		CONTINUE
	SUM_PRICE += COS_PRICE:LOCAL
NEXT
RETURNF SUM_PRICE



@MNG_CHANGE_CLOTHES(C_ID)
#DIM          C_ID
#DIMS CONST   COS_TYPE_ALL  = "服", "下着トップス", "下着ボトムス", "靴下", "靴", "帽子＆アクセ", "淫紋"
#DIM  CONST   COS_CFLAG_ID  = 420, 423, 424, 421, 422, 419, 418
#DIMS CONST   STR_BODY_SIZE   = "NORMAL", "MINI"
#DIM  DYNAMIC LOAD_CHECK = 1
#DIM  DYNAMIC MEMO_COS, 7
#DIM  DYNAMIC NEW_COS, 7
#DIM  DYNAMIC COS_PRICE, 7
IF LOAD_CHECK
	LOAD_CHECK = 0
	FOR LOCAL, 0, 7
		MEMO_COS:LOCAL = CFLAG:C_ID:(COS_CFLAG_ID:LOCAL)
		NEW_COS:LOCAL  = MEMO_COS:LOCAL
	NEXT
ENDIF
CLEARLINE LINECOUNT
CALL INFO_STATUS_HEADER(C_ID)
CALL C_PICTURE_FITTING(C_ID, MEMO_COS, NEW_COS)
PRINTFORML 갈아입을 옷의 종류를 선택하세요(소지금:{MONEY})
DRAWLINE
FOR LOCAL, 0, VARSIZE("COS_TYPE_ALL")
	PRINTBUTTON @"[{LOCAL}] %COS_TYPE_ALL:LOCAL, 14%", LOCAL
	PRINT 　　｜
	IF MEMO_COS:LOCAL < 0
		PRINTFORM %"－－", 24, LEFT%　→
	ELSE
		PRINTFORM %COSTUME_DATA(STR_BODY_SIZE:(CFLAG:C_ID:住人_体格), COS_TYPE_ALL:LOCAL, MEMO_COS:LOCAL, "NAME"), 24, LEFT%　→
	ENDIF
	IF NEW_COS:LOCAL < 0
		PRINTFORM －－
	ELSEIF NEW_COS:LOCAL == MEMO_COS:LOCAL
		PRINTFORM 그대로
	ELSE
		PRINTFORM %COSTUME_DATA(STR_BODY_SIZE:(CFLAG:C_ID:住人_体格), COS_TYPE_ALL:LOCAL, NEW_COS:LOCAL, "NAME"), 24, LEFT%
	ENDIF
	PRINTL
NEXT
SIF !LINEISEMPTY()
	PRINTL
PRINTFORML
PRINTFORML [100] - 의상 구입 (비용 {CULC_COST_COS_CHANGE(MEMO_COS, NEW_COS, COS_PRICE)})
PRINTFORML [200] - 리셋
PRINTFORML [999] - 취소
DO
	INPUT
	SELECTCASE RESULT
	CASE 999
		FOR LOCAL, 0, 7
			CFLAG:C_ID:(COS_CFLAG_ID:LOCAL) = MEMO_COS:LOCAL
		NEXT
		RETURN
	CASE 100
		IF MONEY < CULC_COST_COS_CHANGE(MEMO_COS, NEW_COS, COS_PRICE)
			PRINTFORMW 소지금이 부족합니다
		ELSE
			MONEY -= CULC_COST_COS_CHANGE(MEMO_COS, NEW_COS, COS_PRICE)
			FOR LOCAL, 0, 7
				MEMO_COS:LOCAL = CFLAG:C_ID:(COS_CFLAG_ID:LOCAL)
				NEW_COS:LOCAL  = MEMO_COS:LOCAL
			NEXT
			VARSET COS_PRICE
		ENDIF
		BREAK
	CASE 200
		FOR LOCAL, 0, 7
			NEW_COS:LOCAL  = MEMO_COS:LOCAL
		NEXT
		VARSET COS_PRICE
		BREAK
	CASE 0 TO 6
		CALL MNG_CLOTHES_FITTING(C_ID, COS_TYPE_ALL:RESULT, MEMO_COS, NEW_COS, COS_PRICE)
		BREAK
	ENDSELECT
LOOP 1
RESTART


@MNG_CLOTHES_FITTING(C_ID, COS_TYPE, MEMO_COS, NEW_COS, COS_PRICE)
#DIM          C_ID
#DIMS         COS_TYPE
#DIM  REF     MEMO_COS
#DIM  REF     NEW_COS
#DIM  REF     COS_PRICE
#DIMS CONST   COS_TYPE_ALL  = "服", "下着トップス", "下着ボトムス", "靴下", "靴", "帽子＆アクセ", "淫紋"
#DIM  CONST   COS_CFLAG_ID  = 420, 423, 424, 421, 422, 419, 418
#DIM  CONST   服_NORMAL_INDEX = 0, 1, 2, 3, 4, -1, 5, 6, 7, 8, 17, 18, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, -1, 25, 26, 27
#DIMS CONST   STR_BODY_SIZE   = "NORMAL", "MINI"
#DIMS         TEMP_LABEL
#DIM  DYNAMIC PRICE_LIST, 40
#DIM  DYNAMIC NOW_TYPE

NOW_TYPE = FINDELEMENT(COS_TYPE_ALL, COS_TYPE, , , 1)
SIF NOW_TYPE < 0
	RETURN

PRINTFORML
;先に例外処理
IF CFLAG:C_ID:住人_体格 == 0 && COS_TYPE == "服"
	FOR LOCAL, 0, VARSIZE("服_NORMAL_INDEX")
		IF 服_NORMAL_INDEX:LOCAL < 0
			PRINTFORM %" " * 39%
		ELSE
			PRICE_LIST:(服_NORMAL_INDEX:LOCAL) = TOINT(COSTUME_DATA(STR_BODY_SIZE:(CFLAG:C_ID:住人_体格), COS_TYPE, 服_NORMAL_INDEX:LOCAL, "PRICE"))
			TEMP_LABEL '= @"[{服_NORMAL_INDEX:LOCAL, 2}] "
			TEMP_LABEL += @"%COSTUME_DATA(STR_BODY_SIZE:(CFLAG:C_ID:住人_体格), COS_TYPE, 服_NORMAL_INDEX:LOCAL, "NAME"), 24, LEFT%"
			TEMP_LABEL += "　\\" + @"{PRICE_LIST:(服_NORMAL_INDEX:LOCAL), 7, RIGHT}"
			PRINTBUTTON TEMP_LABEL, 服_NORMAL_INDEX:LOCAL
		ENDIF
		PRINT 　
		SIF LOCAL % 3 == 2
			PRINTL 
	NEXT
ELSEIF GROUPMATCH(COS_TYPE, "帽子＆アクセ", "淫紋")
	LOCAL = 1
	DO
		TEMP_LABEL '= @"%COSTUME_DATA(STR_BODY_SIZE:(CFLAG:C_ID:住人_体格), COS_TYPE, LOCAL, "NAME"), 24, LEFT%"
		SIF TEMP_LABEL == " " * 24
			BREAK
		PRICE_LIST:LOCAL = TOINT(COSTUME_DATA(STR_BODY_SIZE:(CFLAG:C_ID:住人_体格), COS_TYPE, LOCAL, "PRICE"))
		TEMP_LABEL '= TEMP_LABEL + "　\\" + @"{PRICE_LIST:LOCAL, 7, RIGHT}"
		TEMP_LABEL '= @"[{LOCAL, 2}] " + TEMP_LABEL
		PRINTBUTTON TEMP_LABEL, LOCAL
		PRINT 　
		SIF LOCAL % 4 == 3
			PRINTL 
		LOCAL ++
	LOOP 1
ELSE
	LOCAL = 0
	DO
		TEMP_LABEL '= @"%COSTUME_DATA(STR_BODY_SIZE:(CFLAG:C_ID:住人_体格), COS_TYPE, LOCAL, "NAME"), 24, LEFT%"
		SIF TEMP_LABEL == " " * 24
			BREAK
		PRICE_LIST:LOCAL = TOINT(COSTUME_DATA(STR_BODY_SIZE:(CFLAG:C_ID:住人_体格), COS_TYPE, LOCAL, "PRICE"))
		TEMP_LABEL '= TEMP_LABEL + "　\\" + @"{PRICE_LIST:LOCAL, 7, RIGHT}"
		TEMP_LABEL '= @"[{LOCAL, 2}] " + TEMP_LABEL
		PRINTBUTTON TEMP_LABEL, LOCAL
		PRINT 　
		SIF LOCAL % 3 == 2
			PRINTL 
		LOCAL ++
	LOOP 1
ENDIF
PRINTFORML
SIF !LINEISEMPTY()
	PRINTL
IF COS_TYPE == "淫紋"
	PRINTFORML [-1] 해제
ELSE
	PRINTFORML [-1] 벗긴다
ENDIF
PRINTFORML [100] 돌아온다
DO
	INPUT
	SELECTCASE RESULT
	CASE 100
		RETURN
	CASE -1
		CFLAG:C_ID:(COS_CFLAG_ID:NOW_TYPE) = -1
		NEW_COS:NOW_TYPE   = -1
		COS_PRICE:NOW_TYPE = 0
		RETURN
		[SKIPSTART]
		IF COS_TYPE == "淫紋"
			PRINTFORML 음문을 해제합니다
		ELSE
			PRINTFORML 옷을 벗깁니다
		ENDIF
		PRINTFORML 괜찮을까요？
		PRINTFORML [1] 네
		PRINTFORML [0] 아니오
		INPUT
		IF RESULT == 1
			CFLAG:C_ID:(COS_CFLAG_ID:NOW_TYPE) = -1
			NEW_COS:NOW_TYPE   = -1
			COS_PRICE:NOW_TYPE = 0
			RETURN
		ENDIF
		[SKIPEND]
	CASE 0 TO 99
		LOCAL = RESULT
		SIF !STRLENS(COSTUME_DATA(STR_BODY_SIZE:(CFLAG:C_ID:住人_体格), COS_TYPE, LOCAL, "NAME"))
			CONTINUE
		
		CFLAG:C_ID:(COS_CFLAG_ID:NOW_TYPE) = LOCAL
		NEW_COS:NOW_TYPE   = LOCAL
		COS_PRICE:NOW_TYPE = PRICE_LIST:LOCAL
		RETURN
	ENDSELECT
LOOP 1
